/**
 * Copyright 2012 Carnegie Institution for Science. All rights reserved.
 */
// Generated by AndroMDA Poesys/DB cartridge: DO NOT EDIT DIRECTLY.
// Template: AbstractBsDto.vsl


package org.tair.bs.locusdetail;


import com.poesys.bs.delegate.DelegateException;
import com.poesys.bs.dto.IDto;
import com.poesys.db.dto.DtoStatusException;
import com.poesys.db.pk.IPrimaryKey;
import com.poesys.bs.dto.AbstractDto;


import org.tair.db.locusdetail.ILocusGeneModelCdnaAlias;
import org.tair.db.locusdetail.LocusGeneModelCdnaAliasProxy;
import org.tair.db.locusdetail.LocusGeneModelCdnaAlias;


/**
 * <p>
 * A business layer data-transfer object (DTO) for the LocusGeneModelCdnaAlias. This class
 * is an abstract class that contains AndroMDA generated code; change nothing
 * in this class. Instead, override any methods in the concrete subclass
 * generated in the same package. AndroMDA will overwrite this class each time
 * you run it but will never overwrite the concrete subclass.
 * </p>
 * <p>
 * Another name for the cDNA for the locus gene model
 * </p>
 * <p>
 * Stereotypes:
 * </p>
 * <ul>
 *     <li>CompositeKey</li>
 *     <li>Persistent</li>
 * </ul>
 * <p>
 * Class is read/write: false
 * </p>
 *
 * @author Poesys/DB Cartridge
 */
public abstract class AbstractBsLocusGeneModelCdnaAlias 
    extends AbstractDto<org.tair.db.locusdetail.ILocusGeneModelCdnaAlias> {

  /**
   * Create a BsLocusGeneModelCdnaAlias object from a LocusGeneModelCdnaAlias object.
   * 
   * @param dto the data-access layer LocusGeneModelCdnaAlias DTO
   * @throws DelegateException when there is a problem creating the LocusGeneModelCdnaAlias
   */
  public AbstractBsLocusGeneModelCdnaAlias(ILocusGeneModelCdnaAlias dto) throws DelegateException {
    super(dto);
  }

  /**
   * Create a LocusGeneModelCdnaAlias from new data.
   *
   * @param key the primary key of the LocusGeneModelCdnaAlias
   * @param geneModelName composite super-key attribute that uniquely identifies child combined with child sub-key and any other parent super-keys
   * @param locusTairObjectId composite super-key attribute that uniquely identifies child combined with child sub-key and any other parent super-keys
   * @param sequenceId composite super-key attribute that uniquely identifies child combined with child sub-key and any other parent super-keys
   * @param alias the alias for the cDNA sequence
   */
  public AbstractBsLocusGeneModelCdnaAlias(IPrimaryKey key, java.lang.String geneModelName, java.lang.Long locusTairObjectId, java.lang.Long sequenceId, java.lang.String alias) {
    super(new LocusGeneModelCdnaAliasProxy(new LocusGeneModelCdnaAlias(key, geneModelName, locusTairObjectId, sequenceId, alias)));
  }

  @SuppressWarnings("unchecked")
  @Override
  public boolean equals(Object arg0) {
    // Unchecked cast here
    IDto<ILocusGeneModelCdnaAlias> other = (IDto<ILocusGeneModelCdnaAlias>)arg0;
    return dto.equals(other.toDto());
  }

  @Override
  public int hashCode() {
    return dto.hashCode();
  }

  public int compareTo(IDto<ILocusGeneModelCdnaAlias> o) {
    return dto.compareTo(o.toDto());
  }

  public void markChildrenDeleted() throws DtoStatusException {
    dto.markChildrenDeleted();
  }
  
  public IPrimaryKey getPrimaryKey() {
    return dto.getPrimaryKey();
  }

  // Data member properties

  /**
   * <p>
   * Composite super-key attribute that uniquely identifies child combined with child sub-key and any other parent super-keys
   * </p>
   * <p>
   * Added by AddExplicitSubKeyProperties + addNaturalSubkeyOnClass + AddParentKeyAttributes + AddParentKeyAttributes as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object LocusGeneModelCdnaAlias</li>
   * </ul>
   * </p>
   * @return a java.lang.String geneModelName
   */
  public java.lang.String getGeneModelName() {
    return dto.getGeneModelName();
  }

  /**
   * <p>
   * Composite super-key attribute that uniquely identifies child combined with child sub-key and any other parent super-keys
   * </p>
   * <p>
   * Added by AddNaturalKeyProperties + AddParentKeyAttributes + AddParentKeyAttributes + AddParentKeyAttributes as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object LocusGeneModelCdnaAlias</li>
   * </ul>
   * </p>
   * @return a java.lang.Long locusTairObjectId
   */
  public java.lang.Long getLocusTairObjectId() {
    return dto.getLocusTairObjectId();
  }

  /**
   * <p>
   * Composite super-key attribute that uniquely identifies child combined with child sub-key and any other parent super-keys
   * </p>
   * <p>
   * Added by AddExplicitSubKeyProperties + addNaturalSubkeyOnClass + AddParentKeyAttributes as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object LocusGeneModelCdnaAlias</li>
   * </ul>
   * </p>
   * @return a java.lang.Long sequenceId
   */
  public java.lang.Long getSequenceId() {
    return dto.getSequenceId();
  }

  /**
   * <p>
   * the alias for the cDNA sequence
   * </p>
   * <p>
   * Added by AddExplicitSubKeyProperties + addNaturalSubkeyOnClass as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object LocusGeneModelCdnaAlias</li>
   * </ul>
   * </p>
   * @return a java.lang.String alias
   */
  public java.lang.String getAlias() {
    return dto.getAlias();
  }

  /**
   * <p>
   * the cDNA for which this alias is another name
   * </p>
   * <p>
   * Added by AddToOneAssociationRequiredObjectProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object LocusGeneModelCdnaAlias</li>
   * </ul>
   * </p>
   * @return a org.tair.bs.locusdetail.BsLocusGeneModelCdna cDna
   */
  public org.tair.bs.locusdetail.BsLocusGeneModelCdna getCDna() {
    // Return 4
    return new org.tair.bs.locusdetail.BsLocusGeneModelCdna(dto.getCDna());
  }
}