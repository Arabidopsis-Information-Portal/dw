/**
 * Copyright 2012 Carnegie Institution for Science. All rights reserved.
 */
// Generated by AndroMDA Poesys/DB cartridge: DO NOT EDIT DIRECTLY.
// Template: AbstractBsDto.vsl


package org.tair.bs.locusdetail;


import com.poesys.bs.delegate.DelegateException;
import com.poesys.bs.dto.IDto;
import com.poesys.db.dto.DtoStatusException;
import com.poesys.db.pk.IPrimaryKey;
import com.poesys.bs.dto.AbstractDto;


import org.tair.db.locusdetail.ILocusGeneModel;
import org.tair.db.locusdetail.LocusGeneModelProxy;
import org.tair.db.locusdetail.LocusGeneModel;


/**
 * <p>
 * A business layer data-transfer object (DTO) for the LocusGeneModel. This class
 * is an abstract class that contains AndroMDA generated code; change nothing
 * in this class. Instead, override any methods in the concrete subclass
 * generated in the same package. AndroMDA will overwrite this class each time
 * you run it but will never overwrite the concrete subclass.
 * </p>
 * <p>
 * The set of gene models of the parent locus excluding the representative gene
 * model
 * </p>
 * <p>
 * Stereotypes:
 * </p>
 * <ul>
 *     <li>CompositeKey</li>
 *     <li>Persistent</li>
 * </ul>
 * <p>
 * Class is read/write: false
 * </p>
 *
 * @author Poesys/DB Cartridge
 */
public abstract class AbstractBsLocusGeneModel 
    extends AbstractDto<org.tair.db.locusdetail.ILocusGeneModel> {

  /**
   * A Collection builder helper class for building a business-layer Collection 
   * of BsAnnotation objects from a Collection annotation of data-access-layer 
   * org.tair.db.locusdetail.IAnnotation objects
   */
  private class BsAnnotationCollectionBuilder 
      extends com.poesys.bs.dto.CollectionBuilder<org.tair.db.locusdetail.IAnnotation, org.tair.bs.locusdetail.BsAnnotation> {
    @Override
    public org.tair.bs.locusdetail.BsAnnotation get(org.tair.db.locusdetail.IAnnotation dto) {
      return new org.tair.bs.locusdetail.BsAnnotation(dto);
    }
  }

  /**
   * A Collection builder helper class for building a data-access-layer Collection 
   * of Annotation objects from an input Collection annotation of 
   * business-layer BsAnnotation objects
   */
  private class AnnotationCollectionBuilder 
      extends com.poesys.bs.dto.CollectionBuilder<org.tair.bs.locusdetail.BsAnnotation, org.tair.db.locusdetail.IAnnotation> {
    @Override
    public org.tair.db.locusdetail.IAnnotation get(org.tair.bs.locusdetail.BsAnnotation dto) {
      return dto.toDto();
    }
  }

  /**
   * A Collection builder helper class for building a business-layer Collection 
   * of BsLocusPolymorphism objects from a Collection polymorphism of data-access-layer 
   * org.tair.db.locusdetail.ILocusPolymorphism objects
   */
  private class BsPolymorphismCollectionBuilder 
      extends com.poesys.bs.dto.CollectionBuilder<org.tair.db.locusdetail.ILocusPolymorphism, org.tair.bs.locusdetail.BsLocusPolymorphism> {
    @Override
    public org.tair.bs.locusdetail.BsLocusPolymorphism get(org.tair.db.locusdetail.ILocusPolymorphism dto) {
      return new org.tair.bs.locusdetail.BsLocusPolymorphism(dto);
    }
  }

  /**
   * A Collection builder helper class for building a data-access-layer Collection 
   * of LocusPolymorphism objects from an input Collection polymorphism of 
   * business-layer BsLocusPolymorphism objects
   */
  private class PolymorphismCollectionBuilder 
      extends com.poesys.bs.dto.CollectionBuilder<org.tair.bs.locusdetail.BsLocusPolymorphism, org.tair.db.locusdetail.ILocusPolymorphism> {
    @Override
    public org.tair.db.locusdetail.ILocusPolymorphism get(org.tair.bs.locusdetail.BsLocusPolymorphism dto) {
      return dto.toDto();
    }
  }

  /**
   * A Collection builder helper class for building a business-layer Collection 
   * of BsLocusGeneModelAnnotation objects from a Collection locusGeneModelAnnotation of data-access-layer 
   * org.tair.db.locusdetail.ILocusGeneModelAnnotation objects
   */
  private class BsLocusGeneModelAnnotationCollectionBuilder 
      extends com.poesys.bs.dto.CollectionBuilder<org.tair.db.locusdetail.ILocusGeneModelAnnotation, org.tair.bs.locusdetail.BsLocusGeneModelAnnotation> {
    @Override
    public org.tair.bs.locusdetail.BsLocusGeneModelAnnotation get(org.tair.db.locusdetail.ILocusGeneModelAnnotation dto) {
      return new org.tair.bs.locusdetail.BsLocusGeneModelAnnotation(dto);
    }
  }

  /**
   * A Collection builder helper class for building a data-access-layer Collection 
   * of LocusGeneModelAnnotation objects from an input Collection locusGeneModelAnnotation of 
   * business-layer BsLocusGeneModelAnnotation objects
   */
  private class LocusGeneModelAnnotationCollectionBuilder 
      extends com.poesys.bs.dto.CollectionBuilder<org.tair.bs.locusdetail.BsLocusGeneModelAnnotation, org.tair.db.locusdetail.ILocusGeneModelAnnotation> {
    @Override
    public org.tair.db.locusdetail.ILocusGeneModelAnnotation get(org.tair.bs.locusdetail.BsLocusGeneModelAnnotation dto) {
      return dto.toDto();
    }
  }

  /**
   * A Collection builder helper class for building a business-layer Collection 
   * of BsPolymorphismSite objects from a Collection polymorphismSite of data-access-layer 
   * org.tair.db.locusdetail.IPolymorphismSite objects
   */
  private class BsPolymorphismSiteCollectionBuilder 
      extends com.poesys.bs.dto.CollectionBuilder<org.tair.db.locusdetail.IPolymorphismSite, org.tair.bs.locusdetail.BsPolymorphismSite> {
    @Override
    public org.tair.bs.locusdetail.BsPolymorphismSite get(org.tair.db.locusdetail.IPolymorphismSite dto) {
      return new org.tair.bs.locusdetail.BsPolymorphismSite(dto);
    }
  }

  /**
   * A Collection builder helper class for building a data-access-layer Collection 
   * of PolymorphismSite objects from an input Collection polymorphismSite of 
   * business-layer BsPolymorphismSite objects
   */
  private class PolymorphismSiteCollectionBuilder 
      extends com.poesys.bs.dto.CollectionBuilder<org.tair.bs.locusdetail.BsPolymorphismSite, org.tair.db.locusdetail.IPolymorphismSite> {
    @Override
    public org.tair.db.locusdetail.IPolymorphismSite get(org.tair.bs.locusdetail.BsPolymorphismSite dto) {
      return dto.toDto();
    }
  }

  /**
   * A List builder helper class for building a business-layer List 
   * of BsModelFeature objects from a List features of data-access-layer 
   * org.tair.db.locusdetail.IModelFeature objects
   */
  private class BsFeaturesListBuilder 
      extends com.poesys.bs.dto.ListBuilder<org.tair.db.locusdetail.IModelFeature, org.tair.bs.locusdetail.BsModelFeature> {
    @Override
    public org.tair.bs.locusdetail.BsModelFeature get(org.tair.db.locusdetail.IModelFeature dto) {
      return new org.tair.bs.locusdetail.BsModelFeature(dto);
    }
  }

  /**
   * A List builder helper class for building a data-access-layer List 
   * of ModelFeature objects from an input List features of 
   * business-layer BsModelFeature objects
   */
  private class FeaturesListBuilder 
      extends com.poesys.bs.dto.ListBuilder<org.tair.bs.locusdetail.BsModelFeature, org.tair.db.locusdetail.IModelFeature> {
    @Override
    public org.tair.db.locusdetail.IModelFeature get(org.tair.bs.locusdetail.BsModelFeature dto) {
      return dto.toDto();
    }
  }

  /**
   * A Collection builder helper class for building a business-layer Collection 
   * of BsLocusGeneModelCdna objects from a Collection cdnas of data-access-layer 
   * org.tair.db.locusdetail.ILocusGeneModelCdna objects
   */
  private class BsCdnasCollectionBuilder 
      extends com.poesys.bs.dto.CollectionBuilder<org.tair.db.locusdetail.ILocusGeneModelCdna, org.tair.bs.locusdetail.BsLocusGeneModelCdna> {
    @Override
    public org.tair.bs.locusdetail.BsLocusGeneModelCdna get(org.tair.db.locusdetail.ILocusGeneModelCdna dto) {
      return new org.tair.bs.locusdetail.BsLocusGeneModelCdna(dto);
    }
  }

  /**
   * A Collection builder helper class for building a data-access-layer Collection 
   * of LocusGeneModelCdna objects from an input Collection cdnas of 
   * business-layer BsLocusGeneModelCdna objects
   */
  private class CdnasCollectionBuilder 
      extends com.poesys.bs.dto.CollectionBuilder<org.tair.bs.locusdetail.BsLocusGeneModelCdna, org.tair.db.locusdetail.ILocusGeneModelCdna> {
    @Override
    public org.tair.db.locusdetail.ILocusGeneModelCdna get(org.tair.bs.locusdetail.BsLocusGeneModelCdna dto) {
      return dto.toDto();
    }
  }

  /**
   * A Collection builder helper class for building a business-layer Collection 
   * of BsProteinModel objects from a Collection proteinModel of data-access-layer 
   * org.tair.db.locusdetail.IProteinModel objects
   */
  private class BsProteinModelCollectionBuilder 
      extends com.poesys.bs.dto.CollectionBuilder<org.tair.db.locusdetail.IProteinModel, org.tair.bs.locusdetail.BsProteinModel> {
    @Override
    public org.tair.bs.locusdetail.BsProteinModel get(org.tair.db.locusdetail.IProteinModel dto) {
      return new org.tair.bs.locusdetail.BsProteinModel(dto);
    }
  }

  /**
   * A Collection builder helper class for building a data-access-layer Collection 
   * of ProteinModel objects from an input Collection proteinModel of 
   * business-layer BsProteinModel objects
   */
  private class ProteinModelCollectionBuilder 
      extends com.poesys.bs.dto.CollectionBuilder<org.tair.bs.locusdetail.BsProteinModel, org.tair.db.locusdetail.IProteinModel> {
    @Override
    public org.tair.db.locusdetail.IProteinModel get(org.tair.bs.locusdetail.BsProteinModel dto) {
      return dto.toDto();
    }
  }

  /**
   * Create a BsLocusGeneModel object from a LocusGeneModel object.
   * 
   * @param dto the data-access layer LocusGeneModel DTO
   * @throws DelegateException when there is a problem creating the LocusGeneModel
   */
  public AbstractBsLocusGeneModel(ILocusGeneModel dto) throws DelegateException {
    super(dto);
  }

  /**
   * Create a LocusGeneModel from new data.
   *
   * @param key the primary key of the LocusGeneModel
   * @param locusTairObjectId composite super-key attribute that uniquely identifies child combined with child sub-key and any other parent super-keys
   * @param geneModelName gene model name; usually in the format ATcGnnnnn.n, where the first part is the
locus name and the part following the dot is the model number; unique within the
locus
   * @param geneModelType the type of the gene model, such as "protein coding"
   * @param representative whether this gene model is the representative gene model for the parent locus,
meaning it acts as the default gene model in situations where no gene model is
specified
   * @param spliceVariant whether this gene model represents a splice variant
   * @param computationalDescription a computationally generated description of the gene model, or "none" if there is
no such description
   * @param curatedSummary an optional curator-written summary for the gene model; null if the summary is
the same as the curated summary for the parent locus
   * @param confidence an optional confidence score string that rates the gene models according to some
confidence algorithm
   */
  public AbstractBsLocusGeneModel(IPrimaryKey key, java.lang.Long locusTairObjectId, java.lang.String geneModelName, java.lang.String geneModelType, java.lang.Boolean representative, java.lang.Boolean spliceVariant, java.lang.String computationalDescription, java.lang.String curatedSummary, java.lang.String confidence) {
    super(new LocusGeneModelProxy(new LocusGeneModel(key, locusTairObjectId, geneModelName, geneModelType, representative, spliceVariant, computationalDescription, curatedSummary, confidence)));
  }

  @SuppressWarnings("unchecked")
  @Override
  public boolean equals(Object arg0) {
    // Unchecked cast here
    IDto<ILocusGeneModel> other = (IDto<ILocusGeneModel>)arg0;
    return dto.equals(other.toDto());
  }

  @Override
  public int hashCode() {
    return dto.hashCode();
  }

  public int compareTo(IDto<ILocusGeneModel> o) {
    return dto.compareTo(o.toDto());
  }

  public void markChildrenDeleted() throws DtoStatusException {
    dto.markChildrenDeleted();
  }
  
  public IPrimaryKey getPrimaryKey() {
    return dto.getPrimaryKey();
  }

  // Data member properties

  /**
   * <p>
   * Composite super-key attribute that uniquely identifies child combined with child sub-key and any other parent super-keys
   * </p>
   * <p>
   * Added by AddNaturalKeyProperties + AddParentKeyAttributes as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object LocusGeneModel</li>
   * </ul>
   * </p>
   * @return a java.lang.Long locusTairObjectId
   */
  public java.lang.Long getLocusTairObjectId() {
    return dto.getLocusTairObjectId();
  }

  /**
   * <p>
   * gene model name; usually in the format ATcGnnnnn.n, where the first part is the
   * locus name and the part following the dot is the model number; unique within the
   * locus
   * </p>
   * <p>
   * Added by AddExplicitSubKeyProperties + addNaturalSubkeyOnClass as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object LocusGeneModel</li>
   * </ul>
   * </p>
   * @return a java.lang.String geneModelName
   */
  public java.lang.String getGeneModelName() {
    return dto.getGeneModelName();
  }

  /**
   * <p>
   * the type of the gene model, such as "protein coding"
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object LocusGeneModel</li>
   * </ul>
   * </p>
   * @return a java.lang.String geneModelType
   */
  public java.lang.String getGeneModelType() {
    return dto.getGeneModelType();
  }

  /**
   * <p>
   * whether this gene model is the representative gene model for the parent locus,
   * meaning it acts as the default gene model in situations where no gene model is
   * specified
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object LocusGeneModel</li>
   * </ul>
   * </p>
   * @return a java.lang.Boolean representative
   */
  public java.lang.Boolean getRepresentative() {
    return dto.getRepresentative();
  }

  /**
   * <p>
   * whether this gene model represents a splice variant
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object LocusGeneModel</li>
   * </ul>
   * </p>
   * @return a java.lang.Boolean spliceVariant
   */
  public java.lang.Boolean getSpliceVariant() {
    return dto.getSpliceVariant();
  }

  /**
   * <p>
   * a computationally generated description of the gene model, or "none" if there is
   * no such description
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object LocusGeneModel</li>
   * </ul>
   * </p>
   * @return a java.lang.String computationalDescription
   */
  public java.lang.String getComputationalDescription() {
    return dto.getComputationalDescription();
  }

  /**
   * <p>
   * an optional curator-written summary for the gene model; null if the summary is
   * the same as the curated summary for the parent locus
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object LocusGeneModel</li>
   * </ul>
   * </p>
   * @return a java.lang.String curatedSummary
   */
  public java.lang.String getCuratedSummary() {
    return dto.getCuratedSummary();
  }

  /**
   * <p>
   * an optional confidence score string that rates the gene models according to some
   * confidence algorithm
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object LocusGeneModel</li>
   * </ul>
   * </p>
   * @return a java.lang.String confidence
   */
  public java.lang.String getConfidence() {
    return dto.getConfidence();
  }

  /**
   * 
   * <p>
   * Added by AddToOneAssociationRequiredObjectProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object LocusGeneModel</li>
   * </ul>
   * </p>
   * @return a org.tair.bs.locusdetail.BsLocusDetail locus
   */
  public org.tair.bs.locusdetail.BsLocusDetail getLocus() {
    // Return 4
    return new org.tair.bs.locusdetail.BsLocusDetail(dto.getLocus());
  }

  /**
   * <p>
   * the set of annotations for the gene model
   * </p>
   * <p>
   * Added by TransformToProperty + AddToManyAssociationCollectionProperties as data member
   * </p>
   * <p>
   * This property loads lazily on demand the first time you call this method,
   * not when you instantiate the BsLocusGeneModel object.
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object LocusGeneModel</li>
   * </ul>
   * </p>
   * @return a org.tair.bs.locusdetail.BsAnnotation annotation
   * @throws java.sql.SQLException when the method can't get a SQL connection to 
   *                               load the property lazily
   */
  public java.util.Collection<org.tair.bs.locusdetail.BsAnnotation> getAnnotation() throws java.sql.SQLException {
    BsAnnotationCollectionBuilder builder = new BsAnnotationCollectionBuilder();
    return builder.getCollection(dto.getAnnotation());
  }

  /**
   * <p>
   * the set of polymorphisms at sites on the locus
   * </p>
   * <p>
   * Added by TransformToProperty + AddToManyAssociationCollectionProperties as data member
   * </p>
   * <p>
   * This property loads lazily on demand the first time you call this method,
   * not when you instantiate the BsLocusGeneModel object.
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object LocusGeneModel</li>
   * </ul>
   * </p>
   * @return a org.tair.bs.locusdetail.BsLocusPolymorphism polymorphism
   * @throws java.sql.SQLException when the method can't get a SQL connection to 
   *                               load the property lazily
   */
  public java.util.Collection<org.tair.bs.locusdetail.BsLocusPolymorphism> getPolymorphism() throws java.sql.SQLException {
    BsPolymorphismCollectionBuilder builder = new BsPolymorphismCollectionBuilder();
    return builder.getCollection(dto.getPolymorphism());
  }

  /**
   * <p>
   * Collection of association class objects (not the associated objects)
   * </p>
   * <p>
   * Added by AddAssociationClassCollectionProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object LocusGeneModel</li>
   * </ul>
   * </p>
   * @return a org.tair.bs.locusdetail.BsLocusGeneModelAnnotation locusGeneModelAnnotation
   */
  public java.util.Collection<org.tair.bs.locusdetail.BsLocusGeneModelAnnotation> getLocusGeneModelAnnotation() {
    BsLocusGeneModelAnnotationCollectionBuilder builder = new BsLocusGeneModelAnnotationCollectionBuilder();
    return builder.getCollection(dto.getLocusGeneModelAnnotation());
  }

  /**
   * <p>
   * Collection of association class objects (not the associated objects)
   * </p>
   * <p>
   * Added by AddAssociationClassCollectionProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object LocusGeneModel</li>
   * </ul>
   * </p>
   * @return a org.tair.bs.locusdetail.BsPolymorphismSite polymorphismSite
   */
  public java.util.Collection<org.tair.bs.locusdetail.BsPolymorphismSite> getPolymorphismSite() {
    BsPolymorphismSiteCollectionBuilder builder = new BsPolymorphismSiteCollectionBuilder();
    return builder.getCollection(dto.getPolymorphismSite());
  }

  /**
   * <p>
   * an ordered list of coordinates for each feature (intron or exon) of the gene
   * model, ordered by starting position
   * </p>
   * <p>
   * Added by AddToManyChildCollectionProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object LocusGeneModel</li>
   * </ul>
   * </p>
   * @return a org.tair.bs.locusdetail.BsModelFeature features
   */
  public java.util.List<org.tair.bs.locusdetail.BsModelFeature> getFeatures() {
    BsFeaturesListBuilder builder = new BsFeaturesListBuilder();
    return builder.getList(dto.getFeatures());
  }

  /**
   * <p>
   * the cDNA sequences from the locus gene model
   * </p>
   * <p>
   * Added by AddToManyChildCollectionProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object LocusGeneModel</li>
   * </ul>
   * </p>
   * @return a org.tair.bs.locusdetail.BsLocusGeneModelCdna cdnas
   */
  public java.util.Collection<org.tair.bs.locusdetail.BsLocusGeneModelCdna> getCdnas() {
    BsCdnasCollectionBuilder builder = new BsCdnasCollectionBuilder();
    return builder.getCollection(dto.getCdnas());
  }

  /**
   * <p>
   * the protein model for a protein coding gene model that models the translation of
   * the gene sequence into the protein amino acid sequence
   * </p>
   * <p>
   * Added by AddToManyChildCollectionProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object LocusGeneModel</li>
   * </ul>
   * </p>
   * @return a org.tair.bs.locusdetail.BsProteinModel proteinModel
   */
  public java.util.Collection<org.tair.bs.locusdetail.BsProteinModel> getProteinModel() {
    BsProteinModelCollectionBuilder builder = new BsProteinModelCollectionBuilder();
    return builder.getCollection(dto.getProteinModel());
  }
}