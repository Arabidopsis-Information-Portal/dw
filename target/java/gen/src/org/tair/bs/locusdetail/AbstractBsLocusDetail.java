/**
 * Copyright 2012 Carnegie Institution for Science. All rights reserved.
 */
// Generated by AndroMDA Poesys/DB cartridge: DO NOT EDIT DIRECTLY.
// Template: AbstractBsDto.vsl


package org.tair.bs.locusdetail;


import com.poesys.bs.delegate.DelegateException;
import com.poesys.bs.dto.IDto;
import com.poesys.db.dto.DtoStatusException;
import com.poesys.db.pk.IPrimaryKey;
import com.poesys.bs.dto.AbstractDto;


import org.tair.db.locusdetail.ILocusDetail;
import org.tair.db.locusdetail.LocusDetailProxy;
import org.tair.db.locusdetail.LocusDetail;


/**
 * <p>
 * A business layer data-transfer object (DTO) for the LocusDetail. This class
 * is an abstract class that contains AndroMDA generated code; change nothing
 * in this class. Instead, override any methods in the concrete subclass
 * generated in the same package. AndroMDA will overwrite this class each time
 * you run it but will never overwrite the concrete subclass.
 * </p>
 * <p>
 * The central object of the subsystem, a locus, which is the location on a
 * chromosome of a gene (the concept of a physical DNA structure that maps into a
 * protein or RNA molecule and has distinct function)
 * </p>
 * <p>
 * Stereotypes:
 * </p>
 * <ul>
 *     <li>NaturalKey</li>
 *     <li>Persistent</li>
 * </ul>
 * <p>
 * Class is read/write: false
 * </p>
 *
 * @author Poesys/DB Cartridge
 */
public abstract class AbstractBsLocusDetail 
    extends AbstractDto<org.tair.db.locusdetail.ILocusDetail> {

  /**
   * A Collection builder helper class for building a business-layer Collection 
   * of BsAnnotation objects from a Collection annotation of data-access-layer 
   * org.tair.db.locusdetail.IAnnotation objects
   */
  private class BsAnnotationCollectionBuilder 
      extends com.poesys.bs.dto.CollectionBuilder<org.tair.db.locusdetail.IAnnotation, org.tair.bs.locusdetail.BsAnnotation> {
    @Override
    public org.tair.bs.locusdetail.BsAnnotation get(org.tair.db.locusdetail.IAnnotation dto) {
      return new org.tair.bs.locusdetail.BsAnnotation(dto);
    }
  }

  /**
   * A Collection builder helper class for building a data-access-layer Collection 
   * of Annotation objects from an input Collection annotation of 
   * business-layer BsAnnotation objects
   */
  private class AnnotationCollectionBuilder 
      extends com.poesys.bs.dto.CollectionBuilder<org.tair.bs.locusdetail.BsAnnotation, org.tair.db.locusdetail.IAnnotation> {
    @Override
    public org.tair.db.locusdetail.IAnnotation get(org.tair.bs.locusdetail.BsAnnotation dto) {
      return dto.toDto();
    }
  }

  /**
   * A Collection builder helper class for building a business-layer Collection 
   * of BsLocusAnnotation objects from a Collection locusAnnotation of data-access-layer 
   * org.tair.db.locusdetail.ILocusAnnotation objects
   */
  private class BsLocusAnnotationCollectionBuilder 
      extends com.poesys.bs.dto.CollectionBuilder<org.tair.db.locusdetail.ILocusAnnotation, org.tair.bs.locusdetail.BsLocusAnnotation> {
    @Override
    public org.tair.bs.locusdetail.BsLocusAnnotation get(org.tair.db.locusdetail.ILocusAnnotation dto) {
      return new org.tair.bs.locusdetail.BsLocusAnnotation(dto);
    }
  }

  /**
   * A Collection builder helper class for building a data-access-layer Collection 
   * of LocusAnnotation objects from an input Collection locusAnnotation of 
   * business-layer BsLocusAnnotation objects
   */
  private class LocusAnnotationCollectionBuilder 
      extends com.poesys.bs.dto.CollectionBuilder<org.tair.bs.locusdetail.BsLocusAnnotation, org.tair.db.locusdetail.ILocusAnnotation> {
    @Override
    public org.tair.db.locusdetail.ILocusAnnotation get(org.tair.bs.locusdetail.BsLocusAnnotation dto) {
      return dto.toDto();
    }
  }

  /**
   * A List builder helper class for building a business-layer List 
   * of BsLocusUpdateHistory objects from a List updateHistories of data-access-layer 
   * org.tair.db.locusdetail.ILocusUpdateHistory objects
   */
  private class BsUpdateHistoriesListBuilder 
      extends com.poesys.bs.dto.ListBuilder<org.tair.db.locusdetail.ILocusUpdateHistory, org.tair.bs.locusdetail.BsLocusUpdateHistory> {
    @Override
    public org.tair.bs.locusdetail.BsLocusUpdateHistory get(org.tair.db.locusdetail.ILocusUpdateHistory dto) {
      return new org.tair.bs.locusdetail.BsLocusUpdateHistory(dto);
    }
  }

  /**
   * A List builder helper class for building a data-access-layer List 
   * of LocusUpdateHistory objects from an input List updateHistories of 
   * business-layer BsLocusUpdateHistory objects
   */
  private class UpdateHistoriesListBuilder 
      extends com.poesys.bs.dto.ListBuilder<org.tair.bs.locusdetail.BsLocusUpdateHistory, org.tair.db.locusdetail.ILocusUpdateHistory> {
    @Override
    public org.tair.db.locusdetail.ILocusUpdateHistory get(org.tair.bs.locusdetail.BsLocusUpdateHistory dto) {
      return dto.toDto();
    }
  }

  /**
   * A Collection builder helper class for building a business-layer Collection 
   * of BsLocusGeneModel objects from a Collection geneModels of data-access-layer 
   * org.tair.db.locusdetail.ILocusGeneModel objects
   */
  private class BsGeneModelsCollectionBuilder 
      extends com.poesys.bs.dto.CollectionBuilder<org.tair.db.locusdetail.ILocusGeneModel, org.tair.bs.locusdetail.BsLocusGeneModel> {
    @Override
    public org.tair.bs.locusdetail.BsLocusGeneModel get(org.tair.db.locusdetail.ILocusGeneModel dto) {
      return new org.tair.bs.locusdetail.BsLocusGeneModel(dto);
    }
  }

  /**
   * A Collection builder helper class for building a data-access-layer Collection 
   * of LocusGeneModel objects from an input Collection geneModels of 
   * business-layer BsLocusGeneModel objects
   */
  private class GeneModelsCollectionBuilder 
      extends com.poesys.bs.dto.CollectionBuilder<org.tair.bs.locusdetail.BsLocusGeneModel, org.tair.db.locusdetail.ILocusGeneModel> {
    @Override
    public org.tair.db.locusdetail.ILocusGeneModel get(org.tair.bs.locusdetail.BsLocusGeneModel dto) {
      return dto.toDto();
    }
  }

  /**
   * A List builder helper class for building a business-layer List 
   * of BsLocusOtherName objects from a List otherNames of data-access-layer 
   * org.tair.db.locusdetail.ILocusOtherName objects
   */
  private class BsOtherNamesListBuilder 
      extends com.poesys.bs.dto.ListBuilder<org.tair.db.locusdetail.ILocusOtherName, org.tair.bs.locusdetail.BsLocusOtherName> {
    @Override
    public org.tair.bs.locusdetail.BsLocusOtherName get(org.tair.db.locusdetail.ILocusOtherName dto) {
      return new org.tair.bs.locusdetail.BsLocusOtherName(dto);
    }
  }

  /**
   * A List builder helper class for building a data-access-layer List 
   * of LocusOtherName objects from an input List otherNames of 
   * business-layer BsLocusOtherName objects
   */
  private class OtherNamesListBuilder 
      extends com.poesys.bs.dto.ListBuilder<org.tair.bs.locusdetail.BsLocusOtherName, org.tair.db.locusdetail.ILocusOtherName> {
    @Override
    public org.tair.db.locusdetail.ILocusOtherName get(org.tair.bs.locusdetail.BsLocusOtherName dto) {
      return dto.toDto();
    }
  }

  /**
   * A Collection builder helper class for building a business-layer Collection 
   * of BsLocusPhysicalMapCoordinates objects from a Collection locations of data-access-layer 
   * org.tair.db.locusdetail.ILocusPhysicalMapCoordinates objects
   */
  private class BsLocationsCollectionBuilder 
      extends com.poesys.bs.dto.CollectionBuilder<org.tair.db.locusdetail.ILocusPhysicalMapCoordinates, org.tair.bs.locusdetail.BsLocusPhysicalMapCoordinates> {
    @Override
    public org.tair.bs.locusdetail.BsLocusPhysicalMapCoordinates get(org.tair.db.locusdetail.ILocusPhysicalMapCoordinates dto) {
      return new org.tair.bs.locusdetail.BsLocusPhysicalMapCoordinates(dto);
    }
  }

  /**
   * A Collection builder helper class for building a data-access-layer Collection 
   * of LocusPhysicalMapCoordinates objects from an input Collection locations of 
   * business-layer BsLocusPhysicalMapCoordinates objects
   */
  private class LocationsCollectionBuilder 
      extends com.poesys.bs.dto.CollectionBuilder<org.tair.bs.locusdetail.BsLocusPhysicalMapCoordinates, org.tair.db.locusdetail.ILocusPhysicalMapCoordinates> {
    @Override
    public org.tair.db.locusdetail.ILocusPhysicalMapCoordinates get(org.tair.bs.locusdetail.BsLocusPhysicalMapCoordinates dto) {
      return dto.toDto();
    }
  }

  /**
   * A List builder helper class for building a business-layer List 
   * of BsLocusResourceLink objects from a List resourceLinks of data-access-layer 
   * org.tair.db.locusdetail.ILocusResourceLink objects
   */
  private class BsResourceLinksListBuilder 
      extends com.poesys.bs.dto.ListBuilder<org.tair.db.locusdetail.ILocusResourceLink, org.tair.bs.locusdetail.BsLocusResourceLink> {
    @Override
    public org.tair.bs.locusdetail.BsLocusResourceLink get(org.tair.db.locusdetail.ILocusResourceLink dto) {
      return new org.tair.bs.locusdetail.BsLocusResourceLink(dto);
    }
  }

  /**
   * A List builder helper class for building a data-access-layer List 
   * of LocusResourceLink objects from an input List resourceLinks of 
   * business-layer BsLocusResourceLink objects
   */
  private class ResourceLinksListBuilder 
      extends com.poesys.bs.dto.ListBuilder<org.tair.bs.locusdetail.BsLocusResourceLink, org.tair.db.locusdetail.ILocusResourceLink> {
    @Override
    public org.tair.db.locusdetail.ILocusResourceLink get(org.tair.bs.locusdetail.BsLocusResourceLink dto) {
      return dto.toDto();
    }
  }

  /**
   * A List builder helper class for building a business-layer List 
   * of BsLocusComment objects from a List comments of data-access-layer 
   * org.tair.db.locusdetail.ILocusComment objects
   */
  private class BsCommentsListBuilder 
      extends com.poesys.bs.dto.ListBuilder<org.tair.db.locusdetail.ILocusComment, org.tair.bs.locusdetail.BsLocusComment> {
    @Override
    public org.tair.bs.locusdetail.BsLocusComment get(org.tair.db.locusdetail.ILocusComment dto) {
      return new org.tair.bs.locusdetail.BsLocusComment(dto);
    }
  }

  /**
   * A List builder helper class for building a data-access-layer List 
   * of LocusComment objects from an input List comments of 
   * business-layer BsLocusComment objects
   */
  private class CommentsListBuilder 
      extends com.poesys.bs.dto.ListBuilder<org.tair.bs.locusdetail.BsLocusComment, org.tair.db.locusdetail.ILocusComment> {
    @Override
    public org.tair.db.locusdetail.ILocusComment get(org.tair.bs.locusdetail.BsLocusComment dto) {
      return dto.toDto();
    }
  }

  /**
   * A List builder helper class for building a business-layer List 
   * of BsLocusAttribution objects from a List attributions of data-access-layer 
   * org.tair.db.locusdetail.ILocusAttribution objects
   */
  private class BsAttributionsListBuilder 
      extends com.poesys.bs.dto.ListBuilder<org.tair.db.locusdetail.ILocusAttribution, org.tair.bs.locusdetail.BsLocusAttribution> {
    @Override
    public org.tair.bs.locusdetail.BsLocusAttribution get(org.tair.db.locusdetail.ILocusAttribution dto) {
      return new org.tair.bs.locusdetail.BsLocusAttribution(dto);
    }
  }

  /**
   * A List builder helper class for building a data-access-layer List 
   * of LocusAttribution objects from an input List attributions of 
   * business-layer BsLocusAttribution objects
   */
  private class AttributionsListBuilder 
      extends com.poesys.bs.dto.ListBuilder<org.tair.bs.locusdetail.BsLocusAttribution, org.tair.db.locusdetail.ILocusAttribution> {
    @Override
    public org.tair.db.locusdetail.ILocusAttribution get(org.tair.bs.locusdetail.BsLocusAttribution dto) {
      return dto.toDto();
    }
  }

  /**
   * A List builder helper class for building a business-layer List 
   * of BsLocusOtherSymbol objects from a List otherSymbols of data-access-layer 
   * org.tair.db.locusdetail.ILocusOtherSymbol objects
   */
  private class BsOtherSymbolsListBuilder 
      extends com.poesys.bs.dto.ListBuilder<org.tair.db.locusdetail.ILocusOtherSymbol, org.tair.bs.locusdetail.BsLocusOtherSymbol> {
    @Override
    public org.tair.bs.locusdetail.BsLocusOtherSymbol get(org.tair.db.locusdetail.ILocusOtherSymbol dto) {
      return new org.tair.bs.locusdetail.BsLocusOtherSymbol(dto);
    }
  }

  /**
   * A List builder helper class for building a data-access-layer List 
   * of LocusOtherSymbol objects from an input List otherSymbols of 
   * business-layer BsLocusOtherSymbol objects
   */
  private class OtherSymbolsListBuilder 
      extends com.poesys.bs.dto.ListBuilder<org.tair.bs.locusdetail.BsLocusOtherSymbol, org.tair.db.locusdetail.ILocusOtherSymbol> {
    @Override
    public org.tair.db.locusdetail.ILocusOtherSymbol get(org.tair.bs.locusdetail.BsLocusOtherSymbol dto) {
      return dto.toDto();
    }
  }

  /**
   * A Collection builder helper class for building a business-layer Collection 
   * of BsLocusPolymorphism objects from a Collection polymorphisms of data-access-layer 
   * org.tair.db.locusdetail.ILocusPolymorphism objects
   */
  private class BsPolymorphismsCollectionBuilder 
      extends com.poesys.bs.dto.CollectionBuilder<org.tair.db.locusdetail.ILocusPolymorphism, org.tair.bs.locusdetail.BsLocusPolymorphism> {
    @Override
    public org.tair.bs.locusdetail.BsLocusPolymorphism get(org.tair.db.locusdetail.ILocusPolymorphism dto) {
      return new org.tair.bs.locusdetail.BsLocusPolymorphism(dto);
    }
  }

  /**
   * A Collection builder helper class for building a data-access-layer Collection 
   * of LocusPolymorphism objects from an input Collection polymorphisms of 
   * business-layer BsLocusPolymorphism objects
   */
  private class PolymorphismsCollectionBuilder 
      extends com.poesys.bs.dto.CollectionBuilder<org.tair.bs.locusdetail.BsLocusPolymorphism, org.tair.db.locusdetail.ILocusPolymorphism> {
    @Override
    public org.tair.db.locusdetail.ILocusPolymorphism get(org.tair.bs.locusdetail.BsLocusPolymorphism dto) {
      return dto.toDto();
    }
  }

  /**
   * A List builder helper class for building a business-layer List 
   * of BsReference objects from a List references of data-access-layer 
   * org.tair.db.locusdetail.IReference objects
   */
  private class BsReferencesListBuilder 
      extends com.poesys.bs.dto.ListBuilder<org.tair.db.locusdetail.IReference, org.tair.bs.locusdetail.BsReference> {
    @Override
    public org.tair.bs.locusdetail.BsReference get(org.tair.db.locusdetail.IReference dto) {
      return new org.tair.bs.locusdetail.BsReference(dto);
    }
  }

  /**
   * A List builder helper class for building a data-access-layer List 
   * of Reference objects from an input List references of 
   * business-layer BsReference objects
   */
  private class ReferencesListBuilder 
      extends com.poesys.bs.dto.ListBuilder<org.tair.bs.locusdetail.BsReference, org.tair.db.locusdetail.IReference> {
    @Override
    public org.tair.db.locusdetail.IReference get(org.tair.bs.locusdetail.BsReference dto) {
      return dto.toDto();
    }
  }

  /**
   * A Collection builder helper class for building a business-layer Collection 
   * of BsLocusBac objects from a Collection bacs of data-access-layer 
   * org.tair.db.locusdetail.ILocusBac objects
   */
  private class BsBacsCollectionBuilder 
      extends com.poesys.bs.dto.CollectionBuilder<org.tair.db.locusdetail.ILocusBac, org.tair.bs.locusdetail.BsLocusBac> {
    @Override
    public org.tair.bs.locusdetail.BsLocusBac get(org.tair.db.locusdetail.ILocusBac dto) {
      return new org.tair.bs.locusdetail.BsLocusBac(dto);
    }
  }

  /**
   * A Collection builder helper class for building a data-access-layer Collection 
   * of LocusBac objects from an input Collection bacs of 
   * business-layer BsLocusBac objects
   */
  private class BacsCollectionBuilder 
      extends com.poesys.bs.dto.CollectionBuilder<org.tair.bs.locusdetail.BsLocusBac, org.tair.db.locusdetail.ILocusBac> {
    @Override
    public org.tair.db.locusdetail.ILocusBac get(org.tair.bs.locusdetail.BsLocusBac dto) {
      return dto.toDto();
    }
  }

  /**
   * A Collection builder helper class for building a business-layer Collection 
   * of BsLocuslEst objects from a Collection ests of data-access-layer 
   * org.tair.db.locusdetail.ILocuslEst objects
   */
  private class BsEstsCollectionBuilder 
      extends com.poesys.bs.dto.CollectionBuilder<org.tair.db.locusdetail.ILocuslEst, org.tair.bs.locusdetail.BsLocuslEst> {
    @Override
    public org.tair.bs.locusdetail.BsLocuslEst get(org.tair.db.locusdetail.ILocuslEst dto) {
      return new org.tair.bs.locusdetail.BsLocuslEst(dto);
    }
  }

  /**
   * A Collection builder helper class for building a data-access-layer Collection 
   * of LocuslEst objects from an input Collection ests of 
   * business-layer BsLocuslEst objects
   */
  private class EstsCollectionBuilder 
      extends com.poesys.bs.dto.CollectionBuilder<org.tair.bs.locusdetail.BsLocuslEst, org.tair.db.locusdetail.ILocuslEst> {
    @Override
    public org.tair.db.locusdetail.ILocuslEst get(org.tair.bs.locusdetail.BsLocuslEst dto) {
      return dto.toDto();
    }
  }

  /**
   * A Collection builder helper class for building a business-layer Collection 
   * of BsLocusCdna objects from a Collection cDnas of data-access-layer 
   * org.tair.db.locusdetail.ILocusCdna objects
   */
  private class BsCDnasCollectionBuilder 
      extends com.poesys.bs.dto.CollectionBuilder<org.tair.db.locusdetail.ILocusCdna, org.tair.bs.locusdetail.BsLocusCdna> {
    @Override
    public org.tair.bs.locusdetail.BsLocusCdna get(org.tair.db.locusdetail.ILocusCdna dto) {
      return new org.tair.bs.locusdetail.BsLocusCdna(dto);
    }
  }

  /**
   * A Collection builder helper class for building a data-access-layer Collection 
   * of LocusCdna objects from an input Collection cDnas of 
   * business-layer BsLocusCdna objects
   */
  private class CDnasCollectionBuilder 
      extends com.poesys.bs.dto.CollectionBuilder<org.tair.bs.locusdetail.BsLocusCdna, org.tair.db.locusdetail.ILocusCdna> {
    @Override
    public org.tair.db.locusdetail.ILocusCdna get(org.tair.bs.locusdetail.BsLocusCdna dto) {
      return dto.toDto();
    }
  }

  /**
   * Create a BsLocusDetail object from a LocusDetail object.
   * 
   * @param dto the data-access layer LocusDetail DTO
   * @throws DelegateException when there is a problem creating the LocusDetail
   */
  public AbstractBsLocusDetail(ILocusDetail dto) throws DelegateException {
    super(dto);
  }

  /**
   * Create a LocusDetail from new data.
   *
   * @param key the primary key of the LocusDetail
   * @param locusTairObjectId unique identifier for the locus as a TAIR object
   * @param locusName the locus name (usually an AGI name in the form ATcGnnnnn, where the c is the
chromosome (1-5, C, M)
   * @param primarySymbol the primary symbolic name for the locus
   * @param primarySymbolFullName the full name for the primary symbolic name for the locus (may be null)
   * @param chromosome the chromosome on which the locus is positioned (1-5, M, C)
   * @param spanStartPosition the starting base pair number of the locus on the chromosome; used in displaying
the gene structure graphic
   * @param spanEndPosition the end base pair number of the locus on the chromosome; used in displaying the
gene structure graphic
   * @param curatedSummary an optional, general summary of the locus written by a curator; not a gene model
summary
   * @param geneModelCount the number of gene models associated to this locus
   * @param polymorphismCount the number of polymorphisms associated with this locus
   * @param articleCount the number of journal articles associated with this locus
   * @param abstractCount the number of conference proceedings abstracts that refer to this locus
   * @param geneFamilyName the optional name of the gene family that contains this locus
   * @param geneFamilyTairObjectId the optional TAIR object id of the gene family that contains this locus; used to
link to the gene family page
   * @param taxonId foreign key used by setter to query associated object
   */
  public AbstractBsLocusDetail(IPrimaryKey key, java.lang.Long locusTairObjectId, java.lang.String locusName, java.lang.String primarySymbol, java.lang.String primarySymbolFullName, java.lang.String chromosome, java.lang.Long spanStartPosition, java.lang.Long spanEndPosition, java.lang.String curatedSummary, java.lang.Long geneModelCount, java.lang.Long polymorphismCount, java.lang.Long articleCount, java.lang.Long abstractCount, java.lang.String geneFamilyName, java.lang.Long geneFamilyTairObjectId, java.lang.Long taxonId) {
    super(new LocusDetailProxy(new LocusDetail(key, locusTairObjectId, locusName, primarySymbol, primarySymbolFullName, chromosome, spanStartPosition, spanEndPosition, curatedSummary, geneModelCount, polymorphismCount, articleCount, abstractCount, geneFamilyName, geneFamilyTairObjectId, taxonId)));
  }

  @SuppressWarnings("unchecked")
  @Override
  public boolean equals(Object arg0) {
    // Unchecked cast here
    IDto<ILocusDetail> other = (IDto<ILocusDetail>)arg0;
    return dto.equals(other.toDto());
  }

  @Override
  public int hashCode() {
    return dto.hashCode();
  }

  public int compareTo(IDto<ILocusDetail> o) {
    return dto.compareTo(o.toDto());
  }

  public void markChildrenDeleted() throws DtoStatusException {
    dto.markChildrenDeleted();
  }
  
  public IPrimaryKey getPrimaryKey() {
    return dto.getPrimaryKey();
  }

  // Data member properties

  /**
   * <p>
   * unique identifier for the locus as a TAIR object
   * </p>
   * <p>
   * Added by AddNaturalKeyProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object LocusDetail</li>
   * </ul>
   * </p>
   * @return a java.lang.Long locusTairObjectId
   */
  public java.lang.Long getLocusTairObjectId() {
    return dto.getLocusTairObjectId();
  }

  /**
   * <p>
   * the locus name (usually an AGI name in the form ATcGnnnnn, where the c is the
   * chromosome (1-5, C, M)
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object LocusDetail</li>
   * </ul>
   * </p>
   * @return a java.lang.String locusName
   */
  public java.lang.String getLocusName() {
    return dto.getLocusName();
  }

  /**
   * <p>
   * the primary symbolic name for the locus
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object LocusDetail</li>
   * </ul>
   * </p>
   * @return a java.lang.String primarySymbol
   */
  public java.lang.String getPrimarySymbol() {
    return dto.getPrimarySymbol();
  }

  /**
   * <p>
   * the full name for the primary symbolic name for the locus (may be null)
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object LocusDetail</li>
   * </ul>
   * </p>
   * @return a java.lang.String primarySymbolFullName
   */
  public java.lang.String getPrimarySymbolFullName() {
    return dto.getPrimarySymbolFullName();
  }

  /**
   * <p>
   * the chromosome on which the locus is positioned (1-5, M, C)
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object LocusDetail</li>
   * </ul>
   * </p>
   * @return a java.lang.String chromosome
   */
  public java.lang.String getChromosome() {
    return dto.getChromosome();
  }

  /**
   * <p>
   * the starting base pair number of the locus on the chromosome; used in displaying
   * the gene structure graphic
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object LocusDetail</li>
   * </ul>
   * </p>
   * @return a java.lang.Long spanStartPosition
   */
  public java.lang.Long getSpanStartPosition() {
    return dto.getSpanStartPosition();
  }

  /**
   * <p>
   * the end base pair number of the locus on the chromosome; used in displaying the
   * gene structure graphic
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object LocusDetail</li>
   * </ul>
   * </p>
   * @return a java.lang.Long spanEndPosition
   */
  public java.lang.Long getSpanEndPosition() {
    return dto.getSpanEndPosition();
  }

  /**
   * <p>
   * an optional, general summary of the locus written by a curator; not a gene model
   * summary
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object LocusDetail</li>
   * </ul>
   * </p>
   * @return a java.lang.String curatedSummary
   */
  public java.lang.String getCuratedSummary() {
    return dto.getCuratedSummary();
  }

  /**
   * <p>
   * the number of gene models associated to this locus
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object LocusDetail</li>
   * </ul>
   * </p>
   * @return a java.lang.Long geneModelCount
   */
  public java.lang.Long getGeneModelCount() {
    return dto.getGeneModelCount();
  }

  /**
   * <p>
   * the number of polymorphisms associated with this locus
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object LocusDetail</li>
   * </ul>
   * </p>
   * @return a java.lang.Long polymorphismCount
   */
  public java.lang.Long getPolymorphismCount() {
    return dto.getPolymorphismCount();
  }

  /**
   * <p>
   * the number of journal articles associated with this locus
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object LocusDetail</li>
   * </ul>
   * </p>
   * @return a java.lang.Long articleCount
   */
  public java.lang.Long getArticleCount() {
    return dto.getArticleCount();
  }

  /**
   * <p>
   * the number of conference proceedings abstracts that refer to this locus
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object LocusDetail</li>
   * </ul>
   * </p>
   * @return a java.lang.Long abstractCount
   */
  public java.lang.Long getAbstractCount() {
    return dto.getAbstractCount();
  }

  /**
   * <p>
   * the optional name of the gene family that contains this locus
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object LocusDetail</li>
   * </ul>
   * </p>
   * @return a java.lang.String geneFamilyName
   */
  public java.lang.String getGeneFamilyName() {
    return dto.getGeneFamilyName();
  }

  /**
   * <p>
   * the optional TAIR object id of the gene family that contains this locus; used to
   * link to the gene family page
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object LocusDetail</li>
   * </ul>
   * </p>
   * @return a java.lang.Long geneFamilyTairObjectId
   */
  public java.lang.Long getGeneFamilyTairObjectId() {
    return dto.getGeneFamilyTairObjectId();
  }

  /**
   * <p>
   * the taxon (species name) for the species of the locus
   * </p>
   * <p>
   * Added by AddToOneAssociationRequiredObjectProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object LocusDetail</li>
   * </ul>
   * </p>
   * @return a org.tair.bs.basic.BsTaxon taxon
   */
  public org.tair.bs.basic.BsTaxon getTaxon() {
    // Return 4
    return new org.tair.bs.basic.BsTaxon(dto.getTaxon());
  }

  /**
   * <p>
   * Foreign key used by setter to query associated object
   * </p>
   * <p>
   * Added by AddNaturalKeyProperties + AddToOneAssociationAttributeProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object LocusDetail</li>
   * </ul>
   * </p>
   * @return a java.lang.Long taxonId
   */
  public java.lang.Long getTaxonId() {
    return dto.getTaxonId();
  }

  /**
   * <p>
   * the set of annotations associated with the locus
   * </p>
   * <p>
   * Added by TransformToProperty + AddToManyAssociationCollectionProperties as data member
   * </p>
   * <p>
   * This property loads lazily on demand the first time you call this method,
   * not when you instantiate the BsLocusDetail object.
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object LocusDetail</li>
   * </ul>
   * </p>
   * @return a org.tair.bs.locusdetail.BsAnnotation annotation
   * @throws java.sql.SQLException when the method can't get a SQL connection to 
   *                               load the property lazily
   */
  public java.util.Collection<org.tair.bs.locusdetail.BsAnnotation> getAnnotation() throws java.sql.SQLException {
    BsAnnotationCollectionBuilder builder = new BsAnnotationCollectionBuilder();
    return builder.getCollection(dto.getAnnotation());
  }

  /**
   * <p>
   * Collection of association class objects (not the associated objects)
   * </p>
   * <p>
   * Added by AddAssociationClassCollectionProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object LocusDetail</li>
   * </ul>
   * </p>
   * @return a org.tair.bs.locusdetail.BsLocusAnnotation locusAnnotation
   */
  public java.util.Collection<org.tair.bs.locusdetail.BsLocusAnnotation> getLocusAnnotation() {
    BsLocusAnnotationCollectionBuilder builder = new BsLocusAnnotationCollectionBuilder();
    return builder.getCollection(dto.getLocusAnnotation());
  }

  /**
   * <p>
   * an ordered list of updates to the locus, in the order in which the updates
   * occurred
   * </p>
   * <p>
   * Added by AddToManyChildCollectionProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object LocusDetail</li>
   * </ul>
   * </p>
   * @return a org.tair.bs.locusdetail.BsLocusUpdateHistory updateHistories
   */
  public java.util.List<org.tair.bs.locusdetail.BsLocusUpdateHistory> getUpdateHistories() {
    BsUpdateHistoriesListBuilder builder = new BsUpdateHistoriesListBuilder();
    return builder.getList(dto.getUpdateHistories());
  }

  /**
   * <p>
   * the set of gene models for the locus
   * </p>
   * <p>
   * Added by AddToManyChildCollectionProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object LocusDetail</li>
   * </ul>
   * </p>
   * @return a org.tair.bs.locusdetail.BsLocusGeneModel geneModels
   */
  public java.util.Collection<org.tair.bs.locusdetail.BsLocusGeneModel> getGeneModels() {
    BsGeneModelsCollectionBuilder builder = new BsGeneModelsCollectionBuilder();
    return builder.getCollection(dto.getGeneModels());
  }

  /**
   * <p>
   * a list in alphabetical order of the "other" names for the locus, including gene
   * model names, gene aliases, symbols, and full names other than the representative
   * gene model name or the splice-variant names
   * </p>
   * <p>
   * Added by AddToManyChildCollectionProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object LocusDetail</li>
   * </ul>
   * </p>
   * @return a org.tair.bs.locusdetail.BsLocusOtherName otherNames
   */
  public java.util.List<org.tair.bs.locusdetail.BsLocusOtherName> getOtherNames() {
    BsOtherNamesListBuilder builder = new BsOtherNamesListBuilder();
    return builder.getList(dto.getOtherNames());
  }

  /**
   * <p>
   * the set of locations for the locus on various maps
   * </p>
   * <p>
   * Added by AddToManyChildCollectionProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object LocusDetail</li>
   * </ul>
   * </p>
   * @return a org.tair.bs.locusdetail.BsLocusPhysicalMapCoordinates locations
   */
  public java.util.Collection<org.tair.bs.locusdetail.BsLocusPhysicalMapCoordinates> getLocations() {
    BsLocationsCollectionBuilder builder = new BsLocationsCollectionBuilder();
    return builder.getCollection(dto.getLocations());
  }

  /**
   * <p>
   * the alphabetically ordered list of links (URLs) to third-party resources
   * relevant to the locus
   * </p>
   * <p>
   * Added by AddToManyChildCollectionProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object LocusDetail</li>
   * </ul>
   * </p>
   * @return a org.tair.bs.locusdetail.BsLocusResourceLink resourceLinks
   */
  public java.util.List<org.tair.bs.locusdetail.BsLocusResourceLink> getResourceLinks() {
    BsResourceLinksListBuilder builder = new BsResourceLinksListBuilder();
    return builder.getList(dto.getResourceLinks());
  }

  /**
   * <p>
   * the ordered list of comments associated with a locus; the list is ordered by the
   * date entered in descending order
   * </p>
   * <p>
   * Added by AddToManyChildCollectionProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object LocusDetail</li>
   * </ul>
   * </p>
   * @return a org.tair.bs.locusdetail.BsLocusComment comments
   */
  public java.util.List<org.tair.bs.locusdetail.BsLocusComment> getComments() {
    BsCommentsListBuilder builder = new BsCommentsListBuilder();
    return builder.getList(dto.getComments());
  }

  /**
   * <p>
   * the ordered list of community members to whom the presence of the locus in the
   * database is due
   * </p>
   * <p>
   * Added by AddToManyChildCollectionProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object LocusDetail</li>
   * </ul>
   * </p>
   * @return a org.tair.bs.locusdetail.BsLocusAttribution attributions
   */
  public java.util.List<org.tair.bs.locusdetail.BsLocusAttribution> getAttributions() {
    BsAttributionsListBuilder builder = new BsAttributionsListBuilder();
    return builder.getList(dto.getAttributions());
  }

  /**
   * 
   * <p>
   * Added by AddToManyChildCollectionProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object LocusDetail</li>
   * </ul>
   * </p>
   * @return a org.tair.bs.locusdetail.BsLocusOtherSymbol otherSymbols
   */
  public java.util.List<org.tair.bs.locusdetail.BsLocusOtherSymbol> getOtherSymbols() {
    BsOtherSymbolsListBuilder builder = new BsOtherSymbolsListBuilder();
    return builder.getList(dto.getOtherSymbols());
  }

  /**
   * <p>
   * the polymorphisms that occur within the locus
   * </p>
   * <p>
   * Added by AddToManyChildCollectionProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object LocusDetail</li>
   * </ul>
   * </p>
   * @return a org.tair.bs.locusdetail.BsLocusPolymorphism polymorphisms
   */
  public java.util.Collection<org.tair.bs.locusdetail.BsLocusPolymorphism> getPolymorphisms() {
    BsPolymorphismsCollectionBuilder builder = new BsPolymorphismsCollectionBuilder();
    return builder.getCollection(dto.getPolymorphisms());
  }

  /**
   * <p>
   * the set of references that refer to this locus; limited to a certain number of
   * references ordered by publication year (descending) and number of loci mentioned
   * (descending) to identify the references most likely to be of use
   * </p>
   * <p>
   * Added by AddToManyChildCollectionProperties as data member
   * </p>
   * <p>
   * This property loads lazily on demand the first time you call this method,
   * not when you instantiate the BsLocusDetail object.
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object LocusDetail</li>
   * </ul>
   * </p>
   * @return a org.tair.bs.locusdetail.BsReference references
   * @throws java.sql.SQLException when the method can't get a SQL connection to 
   *                               load the property lazily
   */
  public java.util.List<org.tair.bs.locusdetail.BsReference> getReferences() throws java.sql.SQLException {
    BsReferencesListBuilder builder = new BsReferencesListBuilder();
    return builder.getList(dto.getReferences());
  }

  /**
   * <p>
   * the set of BACs that contain the parent locus
   * </p>
   * <p>
   * Added by AddToManyChildCollectionProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object LocusDetail</li>
   * </ul>
   * </p>
   * @return a org.tair.bs.locusdetail.BsLocusBac bacs
   */
  public java.util.Collection<org.tair.bs.locusdetail.BsLocusBac> getBacs() {
    BsBacsCollectionBuilder builder = new BsBacsCollectionBuilder();
    return builder.getCollection(dto.getBacs());
  }

  /**
   * <p>
   * the EST clone ends that tag the locus
   * </p>
   * <p>
   * Added by AddToManyChildCollectionProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object LocusDetail</li>
   * </ul>
   * </p>
   * @return a org.tair.bs.locusdetail.BsLocuslEst ests
   */
  public java.util.Collection<org.tair.bs.locusdetail.BsLocuslEst> getEsts() {
    BsEstsCollectionBuilder builder = new BsEstsCollectionBuilder();
    return builder.getCollection(dto.getEsts());
  }

  /**
   * 
   * <p>
   * Added by AddToManyChildCollectionProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object LocusDetail</li>
   * </ul>
   * </p>
   * @return a org.tair.bs.locusdetail.BsLocusCdna cDnas
   */
  public java.util.Collection<org.tair.bs.locusdetail.BsLocusCdna> getCDnas() {
    BsCDnasCollectionBuilder builder = new BsCDnasCollectionBuilder();
    return builder.getCollection(dto.getCDnas());
  }
}