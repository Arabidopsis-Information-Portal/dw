/**
 * Copyright 2012 Carnegie Institution for Science. All rights reserved.
 */
// Generated by AndroMDA Poesys/DB cartridge: DO NOT EDIT DIRECTLY.
// Template: AbstractBsDto.vsl


package org.tair.bs.locusdetail;


import com.poesys.bs.delegate.DelegateException;
import com.poesys.bs.dto.IDto;
import com.poesys.db.dto.DtoStatusException;
import com.poesys.db.pk.IPrimaryKey;
import com.poesys.bs.dto.AbstractDto;


import org.tair.db.locusdetail.IPolymorphismSite;
import org.tair.db.locusdetail.PolymorphismSiteProxy;
import org.tair.db.locusdetail.PolymorphismSite;


/**
 * <p>
 * A business layer data-transfer object (DTO) for the PolymorphismSite. This class
 * is an abstract class that contains AndroMDA generated code; change nothing
 * in this class. Instead, override any methods in the concrete subclass
 * generated in the same package. AndroMDA will overwrite this class each time
 * you run it but will never overwrite the concrete subclass.
 * </p>
 * <p>
 * The site on a specific gene model for a locus on which a polymorphism within the
 * locus appears
 * </p>
 * <p>
 * Stereotypes:
 * </p>
 * <ul>
 *     <li>AssociationKey</li>
 *     <li>Persistent</li>
 * </ul>
 * <p>
 * Class is read/write: true
 * </p>
 *
 * @author Poesys/DB Cartridge
 */
public abstract class AbstractBsPolymorphismSite 
    extends AbstractDto<org.tair.db.locusdetail.IPolymorphismSite> {

  /**
   * Create a BsPolymorphismSite object from a PolymorphismSite object.
   * 
   * @param dto the data-access layer PolymorphismSite DTO
   * @throws DelegateException when there is a problem creating the PolymorphismSite
   */
  public AbstractBsPolymorphismSite(IPolymorphismSite dto) throws DelegateException {
    super(dto);
  }

  /**
   * Create a PolymorphismSite from new data.
   *
   * @param key the primary key of the PolymorphismSite
   * @param lociObject associated LocusGeneModel object
   * @param polymorphismsObject associated LocusPolymorphism object
   * @param geneModelName Attribute that is part of the association key
   * @param lociLocusTairObjectId Attribute that is part of the association key
   * @param polymorphismsLocusTairObjectId Attribute that is part of the association key
   * @param polymorphismName Attribute that is part of the association key
   * @param site the site on the gene model; indicates the gross position of the polymorphism
within each gene model (for example, exon, intron). Add the categories exon--non
synonymous mutation and exon--synonomous mutation. To save space, especially if
there are a lot of associated gene models, it’s OK to abbreviate exon to ‘E’
intron to ‘I’ etc. If text is abbreviated, provide a key so that the user knows
what each abbreviation means.
   */
  public AbstractBsPolymorphismSite(IPrimaryKey key, org.tair.db.locusdetail.ILocusGeneModel lociObject, org.tair.db.locusdetail.ILocusPolymorphism polymorphismsObject, java.lang.String geneModelName, java.lang.Long lociLocusTairObjectId, java.lang.Long polymorphismsLocusTairObjectId, java.lang.String polymorphismName, java.lang.String site) {
    super(new PolymorphismSiteProxy(new PolymorphismSite(key, lociObject, polymorphismsObject, geneModelName, lociLocusTairObjectId, polymorphismsLocusTairObjectId, polymorphismName, site)));
  }

  @SuppressWarnings("unchecked")
  @Override
  public boolean equals(Object arg0) {
    // Unchecked cast here
    IDto<IPolymorphismSite> other = (IDto<IPolymorphismSite>)arg0;
    return dto.equals(other.toDto());
  }

  @Override
  public int hashCode() {
    return dto.hashCode();
  }

  public int compareTo(IDto<IPolymorphismSite> o) {
    return dto.compareTo(o.toDto());
  }

  public void markChildrenDeleted() throws DtoStatusException {
    dto.markChildrenDeleted();
  }
  
  public IPrimaryKey getPrimaryKey() {
    return dto.getPrimaryKey();
  }

  // Data member properties

  /**
   * <p>
   * the site on the gene model; indicates the gross position of the polymorphism
   * within each gene model (for example, exon, intron). Add the categories exon--non
   * synonymous mutation and exon--synonomous mutation. To save space, especially if
   * there are a lot of associated gene models, it’s OK to abbreviate exon to ‘E’
   * intron to ‘I’ etc. If text is abbreviated, provide a key so that the user knows
   * what each abbreviation means.
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object PolymorphismSite</li>
   * </ul>
   * </p>
   * @return a java.lang.String site
   */
  public java.lang.String getSite() {
    return dto.getSite();
  }

  /**
   * <p>
   * Set the site.
   * </p>
   * <p>
   * the site on the gene model; indicates the gross position of the polymorphism
   * within each gene model (for example, exon, intron). Add the categories exon--non
   * synonymous mutation and exon--synonomous mutation. To save space, especially if
   * there are a lot of associated gene models, it’s OK to abbreviate exon to ‘E’
   * intron to ‘I’ etc. If text is abbreviated, provide a key so that the user knows
   * what each abbreviation means.
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object PolymorphismSite</li>
   * </ul>
   * </p>
   * @param site the associated business object
   * @throws com.poesys.db.dto.DtoStatusException when the system can't set
   *                 the data-access status to CHANGED
   * @throws com.poesys.db.InvalidParametersException when the property is
   *                 required but the input parameter site is null
   */
  public void setSite(java.lang.String site) 
      throws com.poesys.db.dto.DtoStatusException , com.poesys.db.InvalidParametersException {
    dto.setSite(site);
  }

  /**
   * <p>
   * Associated object
   * </p>
   * <p>
   * Added by AddAssociationKeyObjectProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object PolymorphismSite</li>
   * </ul>
   * </p>
   * @return a org.tair.bs.locusdetail.BsLocusGeneModel lociLocus
   */
  public org.tair.bs.locusdetail.BsLocusGeneModel getLociLocus() {
    // Return 4
    return new org.tair.bs.locusdetail.BsLocusGeneModel(dto.getLociLocus());
  }

  /**
   * <p>
   * Associated object
   * </p>
   * <p>
   * Added by AddAssociationKeyObjectProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object PolymorphismSite</li>
   * </ul>
   * </p>
   * @return a org.tair.bs.locusdetail.BsLocusPolymorphism polymorphism
   */
  public org.tair.bs.locusdetail.BsLocusPolymorphism getPolymorphism() {
    // Return 4
    return new org.tair.bs.locusdetail.BsLocusPolymorphism(dto.getPolymorphism());
  }

  /**
   * <p>
   * Attribute that is part of the association key
   * </p>
   * <p>
   * Added by AddExplicitSubKeyProperties + addNaturalSubkeyOnClass + AddAssociationKeyAttributeProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object PolymorphismSite</li>
   * </ul>
   * </p>
   * @return a java.lang.String geneModelName
   */
  public java.lang.String getGeneModelName() {
    return dto.getGeneModelName();
  }

  /**
   * <p>
   * Attribute that is part of the association key
   * </p>
   * <p>
   * Added by AddNaturalKeyProperties + AddParentKeyAttributes + AddAssociationKeyAttributeProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object PolymorphismSite</li>
   * </ul>
   * </p>
   * @return a java.lang.Long lociLocusTairObjectId
   */
  public java.lang.Long getLociLocusTairObjectId() {
    return dto.getLociLocusTairObjectId();
  }

  /**
   * <p>
   * Attribute that is part of the association key
   * </p>
   * <p>
   * Added by AddNaturalKeyProperties + AddParentKeyAttributes + AddAssociationKeyAttributeProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object PolymorphismSite</li>
   * </ul>
   * </p>
   * @return a java.lang.Long polymorphismsLocusTairObjectId
   */
  public java.lang.Long getPolymorphismsLocusTairObjectId() {
    return dto.getPolymorphismsLocusTairObjectId();
  }

  /**
   * <p>
   * Attribute that is part of the association key
   * </p>
   * <p>
   * Added by AddExplicitSubKeyProperties + addNaturalSubkeyOnClass + AddAssociationKeyAttributeProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object PolymorphismSite</li>
   * </ul>
   * </p>
   * @return a java.lang.String polymorphismName
   */
  public java.lang.String getPolymorphismName() {
    return dto.getPolymorphismName();
  }
}