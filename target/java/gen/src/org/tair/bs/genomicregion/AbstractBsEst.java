/**
 * Copyright 2012 Carnegie Institution for Science. All rights reserved.
 */
// Generated by AndroMDA Poesys/DB cartridge: DO NOT EDIT DIRECTLY.
// Template: AbstractBsDto.vsl


package org.tair.bs.genomicregion;


import com.poesys.bs.delegate.DelegateException;
import com.poesys.bs.dto.IDto;
import com.poesys.db.dto.DtoStatusException;
import com.poesys.db.pk.IPrimaryKey;
import com.poesys.bs.dto.AbstractDto;


import org.tair.db.genomicregion.IEst;
import org.tair.db.genomicregion.EstProxy;
import org.tair.db.genomicregion.Est;


/**
 * <p>
 * A business layer data-transfer object (DTO) for the Est. This class
 * is an abstract class that contains AndroMDA generated code; change nothing
 * in this class. Instead, override any methods in the concrete subclass
 * generated in the same package. AndroMDA will overwrite this class each time
 * you run it but will never overwrite the concrete subclass.
 * </p>
 * <p>
 * An Expressed Sequence Tag (EST); SO_0000345: A tag produced from a single
 * sequencing read from a cDNA clone or PCR product; typically a few hundred base
 * pairs long. In TAIR, this is a nucleotide sequence associated with a clone end
 * associated with a transcript.
 * </p>
 * <p>
 * Stereotypes:
 * </p>
 * <ul>
 *     <li>CompositeKey</li>
 *     <li>Persistent</li>
 * </ul>
 * <p>
 * Class is read/write: false
 * </p>
 *
 * @author Poesys/DB Cartridge
 */
public abstract class AbstractBsEst 
    extends AbstractDto<org.tair.db.genomicregion.IEst> {

  /**
   * Create a BsEst object from a Est object.
   * 
   * @param dto the data-access layer Est DTO
   * @throws DelegateException when there is a problem creating the Est
   */
  public AbstractBsEst(IEst dto) throws DelegateException {
    super(dto);
  }

  /**
   * Create a Est from new data.
   *
   * @param key the primary key of the Est
   * @param tairObjectId composite super-key attribute that uniquely identifies child combined with child sub-key and any other parent super-keys
   * @param seqTairObjectId the unique TAIR identifier for the EST sequence
   * @param name the sequence name
   * @param sequence the DNA associated with the EST
   * @param genbankAccession the unique identifier at GenBank for the cDNA sequence
   * @param length the length of the cDNA sequence, unit is bp (base pairs)
   * @param startPosition the starting position on the chromosome in unit bp (base pairs)
   * @param endPosition the ending position on the chromosome in unit bp (base pairs)
   * @param cloneName the name of the clone from which the EST derives
   * @param cloneId the unique TAIR identifier for the clone from which the EST derives
   * @param dateEntered the date on which the protein record was created in the source database
   */
  public AbstractBsEst(IPrimaryKey key, java.lang.Long tairObjectId, java.lang.Long seqTairObjectId, java.lang.String name, java.lang.String sequence, java.lang.String genbankAccession, java.lang.Long length, java.lang.Long startPosition, java.lang.Long endPosition, java.lang.String cloneName, java.lang.Long cloneId, java.sql.Timestamp dateEntered) {
    super(new EstProxy(new Est(key, tairObjectId, seqTairObjectId, name, sequence, genbankAccession, length, startPosition, endPosition, cloneName, cloneId, dateEntered)));
  }

  @SuppressWarnings("unchecked")
  @Override
  public boolean equals(Object arg0) {
    // Unchecked cast here
    IDto<IEst> other = (IDto<IEst>)arg0;
    return dto.equals(other.toDto());
  }

  @Override
  public int hashCode() {
    return dto.hashCode();
  }

  public int compareTo(IDto<IEst> o) {
    return dto.compareTo(o.toDto());
  }

  public void markChildrenDeleted() throws DtoStatusException {
    dto.markChildrenDeleted();
  }
  
  public IPrimaryKey getPrimaryKey() {
    return dto.getPrimaryKey();
  }

  // Data member properties

  /**
   * <p>
   * Composite super-key attribute that uniquely identifies child combined with child sub-key and any other parent super-keys
   * </p>
   * <p>
   * Added by AddNaturalKeyProperties + AddInheritedKeyProperties + AddParentKeyAttributes as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object Est</li>
   * </ul>
   * </p>
   * @return a java.lang.Long tairObjectId
   */
  public java.lang.Long getTairObjectId() {
    return dto.getTairObjectId();
  }

  /**
   * <p>
   * the unique TAIR identifier for the EST sequence
   * </p>
   * <p>
   * Added by AddExplicitSubKeyProperties + addNaturalSubkeyOnClass as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object Est</li>
   * </ul>
   * </p>
   * @return a java.lang.Long seqTairObjectId
   */
  public java.lang.Long getSeqTairObjectId() {
    return dto.getSeqTairObjectId();
  }

  /**
   * <p>
   * the sequence name
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object Est</li>
   * </ul>
   * </p>
   * @return a java.lang.String name
   */
  public java.lang.String getName() {
    return dto.getName();
  }

  /**
   * <p>
   * the DNA associated with the EST
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object Est</li>
   * </ul>
   * </p>
   * @return a java.lang.String sequence
   */
  public java.lang.String getSequence() {
    return dto.getSequence();
  }

  /**
   * <p>
   * the unique identifier at GenBank for the cDNA sequence
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object Est</li>
   * </ul>
   * </p>
   * @return a java.lang.String genbankAccession
   */
  public java.lang.String getGenbankAccession() {
    return dto.getGenbankAccession();
  }

  /**
   * <p>
   * the length of the cDNA sequence, unit is bp (base pairs)
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object Est</li>
   * </ul>
   * </p>
   * @return a java.lang.Long length
   */
  public java.lang.Long getLength() {
    return dto.getLength();
  }

  /**
   * <p>
   * the starting position on the chromosome in unit bp (base pairs)
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object Est</li>
   * </ul>
   * </p>
   * @return a java.lang.Long startPosition
   */
  public java.lang.Long getStartPosition() {
    return dto.getStartPosition();
  }

  /**
   * <p>
   * the ending position on the chromosome in unit bp (base pairs)
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object Est</li>
   * </ul>
   * </p>
   * @return a java.lang.Long endPosition
   */
  public java.lang.Long getEndPosition() {
    return dto.getEndPosition();
  }

  /**
   * <p>
   * the name of the clone from which the EST derives
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object Est</li>
   * </ul>
   * </p>
   * @return a java.lang.String cloneName
   */
  public java.lang.String getCloneName() {
    return dto.getCloneName();
  }

  /**
   * <p>
   * the unique TAIR identifier for the clone from which the EST derives
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object Est</li>
   * </ul>
   * </p>
   * @return a java.lang.Long cloneId
   */
  public java.lang.Long getCloneId() {
    return dto.getCloneId();
  }

  /**
   * <p>
   * the date on which the protein record was created in the source database
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object Est</li>
   * </ul>
   * </p>
   * @return a java.sql.Timestamp dateEntered
   */
  public java.sql.Timestamp getDateEntered() {
    return dto.getDateEntered();
  }

  /**
   * <p>
   * the transcript to which the EST applies
   * </p>
   * <p>
   * Added by AddToOneAssociationRequiredObjectProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object Est</li>
   * </ul>
   * </p>
   * @return a org.tair.bs.genomicregion.BsTranscript transcript
   */
  public org.tair.bs.genomicregion.BsTranscript getTranscript() {
    // Return 4
    return new org.tair.bs.genomicregion.BsTranscript(dto.getTranscript());
  }
}