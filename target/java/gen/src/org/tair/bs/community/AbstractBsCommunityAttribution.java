/**
 * Copyright 2012 Carnegie Institution for Science. All rights reserved.
 */
// Generated by AndroMDA Poesys/DB cartridge: DO NOT EDIT DIRECTLY.
// Template: AbstractBsDto.vsl


package org.tair.bs.community;


import com.poesys.bs.delegate.DelegateException;
import com.poesys.bs.dto.IDto;
import com.poesys.db.dto.DtoStatusException;
import com.poesys.db.pk.IPrimaryKey;
import com.poesys.bs.dto.AbstractDto;


import org.tair.db.community.ICommunityAttribution;
import org.tair.db.community.CommunityAttributionProxy;
import org.tair.db.community.CommunityAttribution;


/**
 * <p>
 * A business layer data-transfer object (DTO) for the CommunityAttribution. This class
 * is an abstract class that contains AndroMDA generated code; change nothing
 * in this class. Instead, override any methods in the concrete subclass
 * generated in the same package. AndroMDA will overwrite this class each time
 * you run it but will never overwrite the concrete subclass.
 * </p>
 * <p>
 * The attribution of an object in the database to a community member
 * </p>
 * <p>
 * Stereotypes:
 * </p>
 * <ul>
 *     <li>CompositeKey</li>
 *     <li>Persistent</li>
 * </ul>
 * <p>
 * Class is read/write: false
 * </p>
 *
 * @author Poesys/DB Cartridge
 */
public abstract class AbstractBsCommunityAttribution 
    extends AbstractDto<org.tair.db.community.ICommunityAttribution> {

  /**
   * Create a BsCommunityAttribution object from a CommunityAttribution object.
   * 
   * @param dto the data-access layer CommunityAttribution DTO
   * @throws DelegateException when there is a problem creating the CommunityAttribution
   */
  public AbstractBsCommunityAttribution(ICommunityAttribution dto) throws DelegateException {
    super(dto);
  }

  /**
   * Create a CommunityAttribution from new data.
   *
   * @param key the primary key of the CommunityAttribution
   * @param communityId composite super-key attribute that uniquely identifies child combined with child sub-key and any other parent super-keys
   * @param attributionType the nature of the attribution, such as "submitted_by" or "available_from"; first
part of the ordering part of the primary sub-key
   * @param name the name of the attributed object, such as the AGI number or the germplasm name;
if there is no name, this should contain some kind of descriptive text or
identifier that allows identification of the object;
second part of the ordering part of the primary sub-key
   * @param tairObjectId the unique TAIR identifier for the object being attributed to a community
member; used to link to the object page
   * @param attributionDate the date of the attribution
   * @param attributionComment an optional text comment on the attribution
   */
  public AbstractBsCommunityAttribution(IPrimaryKey key, java.math.BigInteger communityId, java.lang.String attributionType, java.lang.String name, java.lang.Long tairObjectId, java.sql.Timestamp attributionDate, java.lang.String attributionComment) {
    super(new CommunityAttributionProxy(new CommunityAttribution(key, communityId, attributionType, name, tairObjectId, attributionDate, attributionComment)));
  }

  @SuppressWarnings("unchecked")
  @Override
  public boolean equals(Object arg0) {
    // Unchecked cast here
    IDto<ICommunityAttribution> other = (IDto<ICommunityAttribution>)arg0;
    return dto.equals(other.toDto());
  }

  @Override
  public int hashCode() {
    return dto.hashCode();
  }

  public int compareTo(IDto<ICommunityAttribution> o) {
    return dto.compareTo(o.toDto());
  }

  public void markChildrenDeleted() throws DtoStatusException {
    dto.markChildrenDeleted();
  }
  
  public IPrimaryKey getPrimaryKey() {
    return dto.getPrimaryKey();
  }

  // Data member properties

  /**
   * <p>
   * Composite super-key attribute that uniquely identifies child combined with child sub-key and any other parent super-keys
   * </p>
   * <p>
   * Added by AddGeneratedKeyProperties + AddParentKeyAttributes as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object CommunityAttribution</li>
   * </ul>
   * </p>
   * @return a java.math.BigInteger communityId
   */
  public java.math.BigInteger getCommunityId() {
    return dto.getCommunityId();
  }

  /**
   * <p>
   * the nature of the attribution, such as "submitted_by" or "available_from"; first
   * part of the ordering part of the primary sub-key
   * </p>
   * <p>
   * Added by AddExplicitSubKeyProperties + addNaturalSubkeyOnClass as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object CommunityAttribution</li>
   * </ul>
   * </p>
   * @return a java.lang.String attributionType
   */
  public java.lang.String getAttributionType() {
    return dto.getAttributionType();
  }

  /**
   * <p>
   * the name of the attributed object, such as the AGI number or the germplasm name;
   * if there is no name, this should contain some kind of descriptive text or
   * identifier that allows identification of the object;
   * </p>
   * <p>
   * second part of the ordering part of the primary sub-key
   * </p>
   * <p>
   * Added by AddExplicitSubKeyProperties + addNaturalSubkeyOnClass as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object CommunityAttribution</li>
   * </ul>
   * </p>
   * @return a java.lang.String name
   */
  public java.lang.String getName() {
    return dto.getName();
  }

  /**
   * <p>
   * the unique TAIR identifier for the object being attributed to a community
   * member; used to link to the object page
   * </p>
   * <p>
   * Added by AddExplicitSubKeyProperties + addNaturalSubkeyOnClass as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object CommunityAttribution</li>
   * </ul>
   * </p>
   * @return a java.lang.Long tairObjectId
   */
  public java.lang.Long getTairObjectId() {
    return dto.getTairObjectId();
  }

  /**
   * <p>
   * the date of the attribution
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object CommunityAttribution</li>
   * </ul>
   * </p>
   * @return a java.sql.Timestamp attributionDate
   */
  public java.sql.Timestamp getAttributionDate() {
    return dto.getAttributionDate();
  }

  /**
   * <p>
   * an optional text comment on the attribution
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object CommunityAttribution</li>
   * </ul>
   * </p>
   * @return a java.lang.String attributionComment
   */
  public java.lang.String getAttributionComment() {
    return dto.getAttributionComment();
  }

  /**
   * <p>
   * the community member to which the attribution is made
   * </p>
   * <p>
   * Added by AddToOneAssociationRequiredObjectProperties as data member
   * </p>
   * <p>
   * This property loads lazily on demand the first time you call this method,
   * not when you instantiate the BsCommunityAttribution object.
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object CommunityAttribution</li>
   * </ul>
   * </p>
   * @return a org.tair.bs.community.BsCommunity member
   * @throws java.sql.SQLException when the method can't get a SQL connection to 
   *                               load the property lazily
   */
  public org.tair.bs.community.BsCommunity getMember() throws java.sql.SQLException {
    // Return 4
    return new org.tair.bs.community.BsCommunity(dto.getMember());
  }
}