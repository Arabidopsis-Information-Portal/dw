/**
 * Copyright 2012 Carnegie Institution for Science. All rights reserved.
 */
// Generated by AndroMDA Poesys/DB cartridge: DO NOT EDIT DIRECTLY.
// Template: AbstractBsDto.vsl


package org.tair.bs.community;


import com.poesys.bs.delegate.DelegateException;
import com.poesys.bs.dto.IDto;
import com.poesys.db.dto.DtoStatusException;
import com.poesys.db.pk.IPrimaryKey;
import com.poesys.bs.dto.AbstractDto;


import org.tair.db.community.ICommunity;
import org.tair.db.community.CommunityProxy;
import org.tair.db.community.Community;


/**
 * <p>
 * A business layer data-transfer object (DTO) for the Community. This class
 * is an abstract class that contains AndroMDA generated code; change nothing
 * in this class. Instead, override any methods in the concrete subclass
 * generated in the same package. AndroMDA will overwrite this class each time
 * you run it but will never overwrite the concrete subclass.
 * </p>
 * <p>
 * A member of the community
 * </p>
 * <p>
 * Stereotypes:
 * </p>
 * <ul>
 *     <li>Persistent</li>
 *     <li>SequenceKey</li>
 * </ul>
 * <p>
 * Class is read/write: false
 * </p>
 *
 * @author Poesys/DB Cartridge
 */
public abstract class AbstractBsCommunity 
    extends AbstractDto<org.tair.db.community.ICommunity> {

  /**
   * A Collection builder helper class for building a business-layer Collection 
   * of BsCommunityAlias objects from a Collection aliases of data-access-layer 
   * org.tair.db.community.ICommunityAlias objects
   */
  private class BsAliasesCollectionBuilder 
      extends com.poesys.bs.dto.CollectionBuilder<org.tair.db.community.ICommunityAlias, org.tair.bs.community.BsCommunityAlias> {
    @Override
    public org.tair.bs.community.BsCommunityAlias get(org.tair.db.community.ICommunityAlias dto) {
      return new org.tair.bs.community.BsCommunityAlias(dto);
    }
  }

  /**
   * A Collection builder helper class for building a data-access-layer Collection 
   * of CommunityAlias objects from an input Collection aliases of 
   * business-layer BsCommunityAlias objects
   */
  private class AliasesCollectionBuilder 
      extends com.poesys.bs.dto.CollectionBuilder<org.tair.bs.community.BsCommunityAlias, org.tair.db.community.ICommunityAlias> {
    @Override
    public org.tair.db.community.ICommunityAlias get(org.tair.bs.community.BsCommunityAlias dto) {
      return dto.toDto();
    }
  }

  /**
   * A Collection builder helper class for building a business-layer Collection 
   * of BsCommunityKeyword objects from a Collection keywords of data-access-layer 
   * org.tair.db.community.ICommunityKeyword objects
   */
  private class BsKeywordsCollectionBuilder 
      extends com.poesys.bs.dto.CollectionBuilder<org.tair.db.community.ICommunityKeyword, org.tair.bs.community.BsCommunityKeyword> {
    @Override
    public org.tair.bs.community.BsCommunityKeyword get(org.tair.db.community.ICommunityKeyword dto) {
      return new org.tair.bs.community.BsCommunityKeyword(dto);
    }
  }

  /**
   * A Collection builder helper class for building a data-access-layer Collection 
   * of CommunityKeyword objects from an input Collection keywords of 
   * business-layer BsCommunityKeyword objects
   */
  private class KeywordsCollectionBuilder 
      extends com.poesys.bs.dto.CollectionBuilder<org.tair.bs.community.BsCommunityKeyword, org.tair.db.community.ICommunityKeyword> {
    @Override
    public org.tair.db.community.ICommunityKeyword get(org.tair.bs.community.BsCommunityKeyword dto) {
      return dto.toDto();
    }
  }

  /**
   * A List builder helper class for building a business-layer List 
   * of BsCommunityReference objects from a List publications of data-access-layer 
   * org.tair.db.community.ICommunityReference objects
   */
  private class BsPublicationsListBuilder 
      extends com.poesys.bs.dto.ListBuilder<org.tair.db.community.ICommunityReference, org.tair.bs.community.BsCommunityReference> {
    @Override
    public org.tair.bs.community.BsCommunityReference get(org.tair.db.community.ICommunityReference dto) {
      return new org.tair.bs.community.BsCommunityReference(dto);
    }
  }

  /**
   * A List builder helper class for building a data-access-layer List 
   * of CommunityReference objects from an input List publications of 
   * business-layer BsCommunityReference objects
   */
  private class PublicationsListBuilder 
      extends com.poesys.bs.dto.ListBuilder<org.tair.bs.community.BsCommunityReference, org.tair.db.community.ICommunityReference> {
    @Override
    public org.tair.db.community.ICommunityReference get(org.tair.bs.community.BsCommunityReference dto) {
      return dto.toDto();
    }
  }

  /**
   * A List builder helper class for building a business-layer List 
   * of BsCommunityAttribution objects from a List attributions of data-access-layer 
   * org.tair.db.community.ICommunityAttribution objects
   */
  private class BsAttributionsListBuilder 
      extends com.poesys.bs.dto.ListBuilder<org.tair.db.community.ICommunityAttribution, org.tair.bs.community.BsCommunityAttribution> {
    @Override
    public org.tair.bs.community.BsCommunityAttribution get(org.tair.db.community.ICommunityAttribution dto) {
      return new org.tair.bs.community.BsCommunityAttribution(dto);
    }
  }

  /**
   * A List builder helper class for building a data-access-layer List 
   * of CommunityAttribution objects from an input List attributions of 
   * business-layer BsCommunityAttribution objects
   */
  private class AttributionsListBuilder 
      extends com.poesys.bs.dto.ListBuilder<org.tair.bs.community.BsCommunityAttribution, org.tair.db.community.ICommunityAttribution> {
    @Override
    public org.tair.db.community.ICommunityAttribution get(org.tair.bs.community.BsCommunityAttribution dto) {
      return dto.toDto();
    }
  }

  /**
   * Create a BsCommunity object from a Community object.
   * 
   * @param dto the data-access layer Community DTO
   * @throws DelegateException when there is a problem creating the Community
   */
  public AbstractBsCommunity(ICommunity dto) throws DelegateException {
    super(dto);
  }

  /**
   * Create a Community from new data.
   *
   * @param key the primary key of the Community
   * @param communityId primary key attribute
   * @param communityType the kind of community member this is: person or organization
   * @param email the email address of the community member
   * @param memberStatus the current status of the community member: new, active, inactive.
A new member is one who has registered but not been activated.
An active member has been activated.
An inactive member has been inactivated.
   * @param countryId foreign key used by setter to query associated object
   */
  public AbstractBsCommunity(IPrimaryKey key, java.math.BigInteger communityId, java.lang.String communityType, java.lang.String email, java.lang.String memberStatus, java.math.BigInteger countryId) {
    super(new CommunityProxy(new Community(key, communityId, communityType, email, memberStatus, countryId)));
  }

  @SuppressWarnings("unchecked")
  @Override
  public boolean equals(Object arg0) {
    // Unchecked cast here
    IDto<ICommunity> other = (IDto<ICommunity>)arg0;
    return dto.equals(other.toDto());
  }

  @Override
  public int hashCode() {
    return dto.hashCode();
  }

  public int compareTo(IDto<ICommunity> o) {
    return dto.compareTo(o.toDto());
  }

  public void markChildrenDeleted() throws DtoStatusException {
    dto.markChildrenDeleted();
  }
  
  public IPrimaryKey getPrimaryKey() {
    return dto.getPrimaryKey();
  }

  // Data member properties

  /**
   * <p>
   * Primary key attribute
   * </p>
   * <p>
   * Added by AddGeneratedKeyProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object Community</li>
   * </ul>
   * </p>
   * @return a java.math.BigInteger communityId
   */
  public java.math.BigInteger getCommunityId() {
    return dto.getCommunityId();
  }

  /**
   * <p>
   * the kind of community member this is: person or organization
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object Community</li>
   * </ul>
   * </p>
   * @return a java.lang.String communityType
   */
  public java.lang.String getCommunityType() {
    return dto.getCommunityType();
  }

  /**
   * <p>
   * the email address of the community member
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object Community</li>
   * </ul>
   * </p>
   * @return a java.lang.String email
   */
  public java.lang.String getEmail() {
    return dto.getEmail();
  }

  /**
   * <p>
   * the current status of the community member: new, active, inactive.
   * </p>
   * <p>
   * A new member is one who has registered but not been activated.
   * </p>
   * <p>
   * An active member has been activated.
   * </p>
   * <p>
   * An inactive member has been inactivated.
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object Community</li>
   * </ul>
   * </p>
   * @return a java.lang.String memberStatus
   */
  public java.lang.String getMemberStatus() {
    return dto.getMemberStatus();
  }

  /**
   * <p>
   * the person's country
   * </p>
   * <p>
   * Added by AddToOneAssociationRequiredObjectProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object Community</li>
   * </ul>
   * </p>
   * @return a org.tair.bs.community.BsCountry country
   */
  public org.tair.bs.community.BsCountry getCountry() {
    // Return 4
    return new org.tair.bs.community.BsCountry(dto.getCountry());
  }

  /**
   * <p>
   * Foreign key used by setter to query associated object
   * </p>
   * <p>
   * Added by AddGeneratedKeyProperties + AddToOneAssociationAttributeProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object Community</li>
   * </ul>
   * </p>
   * @return a java.math.BigInteger countryId
   */
  public java.math.BigInteger getCountryId() {
    return dto.getCountryId();
  }

  /**
   * <p>
   * the set of alternative names for the community member
   * </p>
   * <p>
   * Added by AddToManyChildCollectionProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object Community</li>
   * </ul>
   * </p>
   * @return a org.tair.bs.community.BsCommunityAlias aliases
   */
  public java.util.Collection<org.tair.bs.community.BsCommunityAlias> getAliases() {
    BsAliasesCollectionBuilder builder = new BsAliasesCollectionBuilder();
    return builder.getCollection(dto.getAliases());
  }

  /**
   * <p>
   * the set of keywords associated with the community member
   * </p>
   * <p>
   * Added by AddToManyChildCollectionProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object Community</li>
   * </ul>
   * </p>
   * @return a org.tair.bs.community.BsCommunityKeyword keywords
   */
  public java.util.Collection<org.tair.bs.community.BsCommunityKeyword> getKeywords() {
    BsKeywordsCollectionBuilder builder = new BsKeywordsCollectionBuilder();
    return builder.getCollection(dto.getKeywords());
  }

  /**
   * <p>
   * an ordered list of references authored by the community member
   * </p>
   * <p>
   * Added by AddToManyChildCollectionProperties as data member
   * </p>
   * <p>
   * This property loads lazily on demand the first time you call this method,
   * not when you instantiate the BsCommunity object.
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object Community</li>
   * </ul>
   * </p>
   * @return a org.tair.bs.community.BsCommunityReference publications
   * @throws java.sql.SQLException when the method can't get a SQL connection to 
   *                               load the property lazily
   */
  public java.util.List<org.tair.bs.community.BsCommunityReference> getPublications() throws java.sql.SQLException {
    BsPublicationsListBuilder builder = new BsPublicationsListBuilder();
    return builder.getList(dto.getPublications());
  }

  /**
   * <p>
   * the ordered list of objects attributed to this community member, ordered by
   * order of addition to the database
   * </p>
   * <p>
   * Added by AddToManyChildCollectionProperties as data member
   * </p>
   * <p>
   * This property loads lazily on demand the first time you call this method,
   * not when you instantiate the BsCommunity object.
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object Community</li>
   * </ul>
   * </p>
   * @return a org.tair.bs.community.BsCommunityAttribution attributions
   * @throws java.sql.SQLException when the method can't get a SQL connection to 
   *                               load the property lazily
   */
  public java.util.List<org.tair.bs.community.BsCommunityAttribution> getAttributions() throws java.sql.SQLException {
    BsAttributionsListBuilder builder = new BsAttributionsListBuilder();
    return builder.getList(dto.getAttributions());
  }
}