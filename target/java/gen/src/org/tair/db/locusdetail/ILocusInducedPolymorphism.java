/**
 * Copyright 2012 Carnegie Institution for Science. All rights reserved.
 */
// Generated by AndroMDA Poesys/DB cartridge: DO NOT EDIT DIRECTLY.
// Template: IDbDto.vsl

package org.tair.db.locusdetail;

import com.poesys.db.dto.IDbDto;

import org.tair.db.locusdetail.ILocusPolymorphism;


/**
 * <p>
 * A data-access layer data-transfer-object interface for the LocusInducedPolymorphism. 
 * The data-transfer-object class and proxy class implement this interface, as
 * does the business-layer data-transfer-object class.
 * </p>
 * <p>
 * A lab-created, non-natural mutation; for example, T-DNA, transposon, and
 * chemically-generated polymorphisms are considered induced. Induced polymorphisms
 * are differences within a single ecotype, whereas natural variation polymorphisms
 * differ between ecotypes.
 * </p>
 * <p>
 * Stereotypes:
 * </p>
 * <ul>
 *     <li>Persistent</li>
 * </ul>
 * <p>
 * Class is read/write: false
 * </p>
 * 
 * @author Poesys/DB Cartridge
 */
public interface ILocusInducedPolymorphism extends IDbDto, ILocusPolymorphism {
  

  /**
   * <p>
   * how the inheritance of the polymorphism works (recessive, unknown, ???)
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties
   * Owning DTO: ${property.dto.name}
   * Owning package: ${property.dto.packageName}
   * Property prefix: inheritance
   * </p>
   * @return a java.lang.String inheritance
   */
  public java.lang.String getInheritance();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: false
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: false

  /**
   * <p>
   * the kind of allele this polymorphism represents; null means the polymorphism is
   * not an allele
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties
   * Owning DTO: ${property.dto.name}
   * Owning package: ${property.dto.packageName}
   * Property prefix: alleleType
   * </p>
   * @return a java.lang.String alleleType
   */
  public java.lang.String getAlleleType();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: false
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: false

  /**
   * 
   * <p>
   * Added by AddToOneAssociationRequiredObjectProperties
   * Owning DTO: SpeciesVariant
   * Owning package: org.tair.db.basic
   * Property prefix: ecotype
   * </p>
   * @return a org.tair.db.basic.ISpeciesVariant ecotype
   */
  public org.tair.db.basic.ISpeciesVariant getEcotype();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: false
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: false

  /**
   * <p>
   * Foreign key used by setter to query associated object
   * </p>
   * <p>
   * Added by AddExplicitSubKeyProperties + addNaturalSubkeyOnClass + AddToOneAssociationAttributeProperties
   * Owning DTO: SpeciesVariant
   * Owning package: org.tair.db.basic
   * Property prefix: ecotype
   * </p>
   * @return a java.lang.String accession
   */
  public java.lang.String getAccession();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: false
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: false

  /**
   * <p>
   * Foreign key used by setter to query associated object
   * </p>
   * <p>
   * Added by AddExplicitSubKeyProperties + addNaturalSubkeyOnClass + AddToOneAssociationAttributeProperties
   * Owning DTO: SpeciesVariant
   * Owning package: org.tair.db.basic
   * Property prefix: ecotype
   * </p>
   * @return a java.lang.String name
   */
  public java.lang.String getName();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: false
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: false

  /**
   * <p>
   * Foreign key used by setter to query associated object
   * </p>
   * <p>
   * Added by AddNaturalKeyProperties + AddParentKeyAttributes + AddToOneAssociationAttributeProperties
   * Owning DTO: SpeciesVariant
   * Owning package: org.tair.db.basic
   * Property prefix: ecotype
   * </p>
   * @return a java.lang.Long taxonId
   */
  public java.lang.Long getTaxonId();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: false
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: false

  /**
   * 
   * <p>
   * Added by AddToManyChildCollectionProperties
   * Owning DTO: LocusGermplasm
   * Owning package: org.tair.db.locusdetail
   * Property prefix: germplasms
   * </p>
   * @return a java.util.Collection<org.tair.db.locusdetail.ILocusGermplasm> germplasms
   */
  public java.util.Collection<org.tair.db.locusdetail.ILocusGermplasm> getGermplasms();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: false
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: false
}