/**
 * Copyright 2012 Carnegie Institution for Science. All rights reserved.
 */
// Generated by AndroMDA Poesys/DB cartridge: DO NOT EDIT DIRECTLY.
// Template: AbstractDbDtoProxy.vsl

package org.tair.db.locusdetail;


import com.poesys.db.dto.AbstractLazyLoadingDtoProxy;


/**
 * <p>
 * A data-access layer data-transfer object (DTO) lazy-loading proxy for the 
 * LocusCdna. This class is an abstract class that contains AndroMDA 
 * generated code; change nothing in this class. Instead, override any methods 
 * in the concrete subclass generated in the same package. AndroMDA will 
 * overwrite this class each time you run it but will never overwrite the concrete subclass.
 * </p>
 * <p>
 * An experimental complementary DNA (cDNA) sequence associated with the locus.
 * cDNA is single-stranded DNA made in the laboratory from a messenger RNA
 * template. Biologists use this form of DNA as a probe in the structural mapping
 * of a chromosome.
 * </p>
 *
 * @author Poesys/DB Cartridge
 */
public abstract class AbstractLocusCdnaProxy extends AbstractLazyLoadingDtoProxy implements ILocusCdna {
  /** Default serial version UID for the Serializable DTO */
  private static final long serialVersionUID = 1L;

  // Lazy-loading query setter strategy nested classes for single-object associations
  


  /**
   * Read-Object setter for de-serializing nested aliases collection
   *
   * Source: AddToManyChildCollectionProperties
   *
   * @see org.tair.db.locusdetail.sql.QueryLocusCdnaAlias
   */
  private class ReadAliasesSetter 
      extends com.poesys.db.dto.AbstractCollectionReadSetter<org.tair.db.locusdetail.ILocusCdnaAlias> {
    private static final long serialVersionUID = 1L;

    /**
     * Create a ReadAliasesSetter object to read the aliases collection.
     */
    public ReadAliasesSetter() {
      super("org.tair.db.locusdetail", 2147483647);
    }

    @Override
    protected String getClassName() {
      return org.tair.db.locusdetail.LocusCdnaAlias.class.getName();
    }

    @Override
    protected java.util.Collection<org.tair.db.locusdetail.ILocusCdnaAlias> getObjectCollection() {
      java.util.Collection<org.tair.db.locusdetail.ILocusCdnaAlias> aliases =  ((org.tair.db.locusdetail.LocusCdna)dto).getAliases();
      return aliases;
    }

    @Override
    protected java.util.List<com.poesys.db.pk.IPrimaryKey> getPrimaryKeys() {
      return ((org.tair.db.locusdetail.LocusCdna)dto).aliasesKeys;
    }

    @Override
    protected com.poesys.db.dao.query.IKeyQuerySql<org.tair.db.locusdetail.ILocusCdnaAlias> getSql() {
      return new org.tair.db.locusdetail.sql.QueryLocusCdnaAlias();
    }

    @Override
    protected void set(java.util.Collection<org.tair.db.locusdetail.ILocusCdnaAlias> collection) {
      ((org.tair.db.locusdetail.LocusCdna)dto).aliases = collection;
    }
  }

  /**
   * Create a LocusCdnaProxy. The concrete subclass must call this constructor.
   *
   * @param dto the DTO to proxy
   */
  public AbstractLocusCdnaProxy(LocusCdna dto) {
    super(dto);

    // Setter arrays
    readObjectSetters = new java.util.concurrent.CopyOnWriteArrayList<com.poesys.db.dto.ISet>();
    readObjectSetters.add(new ReadAliasesSetter());
  }

  @Override
  public boolean equals(Object obj) {
    AbstractLocusCdnaProxy otherProxy = (AbstractLocusCdnaProxy)obj;
    return ((LocusCdna)dto).equals(otherProxy.dto);
  }

  @Override
  public int hashCode() {
    return ((LocusCdna)dto).hashCode();
  }

  // Local properties (attributes, associations, and association classes)

  // Source: AddNaturalKeyProperties + AddParentKeyAttributes
  public java.lang.Long getLocusTairObjectId() {
    return ((LocusCdna)dto).getLocusTairObjectId();
  }

  // Source: AddExplicitSubKeyProperties + addNaturalSubkeyOnClass
  public java.lang.Long getCloneTairObjectId() {
    return ((LocusCdna)dto).getCloneTairObjectId();
  }

  // Source: AddLocalAttributeProperties
  public java.lang.String getCloneName() {
    return ((LocusCdna)dto).getCloneName();
  }

  // Source: AddLocalAttributeProperties
  public java.lang.String getIcAccession() {
    return ((LocusCdna)dto).getIcAccession();
  }

  // Source: AddLocalAttributeProperties
  public java.lang.String getVectorType() {
    return ((LocusCdna)dto).getVectorType();
  }

  // Source: AddLocalAttributeProperties
  public java.lang.Boolean getFullLengthCds() {
    return ((LocusCdna)dto).getFullLengthCds();
  }

  // Source: AddLocalAttributeProperties
  public java.lang.Long getLength() {
    return ((LocusCdna)dto).getLength();
  }

  // Source: AddLocalAttributeProperties
  public java.lang.Long getStart() {
    return ((LocusCdna)dto).getStart();
  }

  // Source: AddLocalAttributeProperties
  public java.lang.Long getEnd() {
    return ((LocusCdna)dto).getEnd();
  }

  // Source: AddToOneAssociationRequiredObjectProperties
  public org.tair.db.locusdetail.ILocusDetail getLocus() {
    return ((LocusCdna)dto).getLocus();
  }

  // Source: AddToManyChildCollectionProperties
  public java.util.Collection<org.tair.db.locusdetail.ILocusCdnaAlias> getAliases() {
    return ((LocusCdna)dto).getAliases();
  }

  public void markChildrenDeleted() throws com.poesys.db.dto.DtoStatusException {
  	((LocusCdna)dto).markChildrenDeleted();
  }
}