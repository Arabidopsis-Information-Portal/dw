/**
 * Copyright 2012 Carnegie Institution for Science. All rights reserved.
 */
// Generated by AndroMDA Poesys/DB cartridge: DO NOT EDIT DIRECTLY.
// Template: IDbDto.vsl

package org.tair.db.locusdetail;

import com.poesys.db.dto.IDbDto;

import org.tair.db.locusdetail.ILocusPolymorphism;


/**
 * <p>
 * A data-access layer data-transfer-object interface for the LocusNaturalVariation. 
 * The data-transfer-object class and proxy class implement this interface, as
 * does the business-layer data-transfer-object class.
 * </p>
 * <p>
 * a naturally-occurring polymorphism between two ecotypes; induced polymorphisms
 * are differences within a single ecotype, whereas natural variation polymorphisms
 * differ between ecotypes
 * </p>
 * <p>
 * Stereotypes:
 * </p>
 * <ul>
 *     <li>Persistent</li>
 * </ul>
 * <p>
 * Class is read/write: false
 * </p>
 * 
 * @author Poesys/DB Cartridge
 */
public interface ILocusNaturalVariation extends IDbDto, ILocusPolymorphism {
  

  /**
   * <p>
   * a text representation of the structural details of the polymorphic difference
   * between the ecotypes (for example, a SNP with G->A)
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties
   * Owning DTO: ${property.dto.name}
   * Owning package: ${property.dto.packageName}
   * Property prefix: detail
   * </p>
   * @return a java.lang.String detail
   */
  public java.lang.String getDetail();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: false
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: false

  /**
   * <p>
   * the ecotype (species variant) that serves as the reference for the polymorphism;
   * the ecotype that contains the sequence that the polymorphism alters
   * </p>
   * <p>
   * Added by AddToOneAssociationRequiredObjectProperties
   * Owning DTO: SpeciesVariant
   * Owning package: org.tair.db.basic
   * Property prefix: referenceEcotype
   * </p>
   * @return a org.tair.db.basic.ISpeciesVariant referenceEcotypeReferenceEcotype
   */
  public org.tair.db.basic.ISpeciesVariant getReferenceEcotypeReferenceEcotype();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: false
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: false

  /**
   * <p>
   * Foreign key used by setter to query associated object
   * </p>
   * <p>
   * Added by AddExplicitSubKeyProperties + addNaturalSubkeyOnClass + AddToOneAssociationAttributeProperties
   * Owning DTO: SpeciesVariant
   * Owning package: org.tair.db.basic
   * Property prefix: referenceEcotype
   * </p>
   * @return a java.lang.String accession
   */
  public java.lang.String getAccession();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: false
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: false

  /**
   * <p>
   * Foreign key used by setter to query associated object
   * </p>
   * <p>
   * Added by AddExplicitSubKeyProperties + addNaturalSubkeyOnClass + AddToOneAssociationAttributeProperties
   * Owning DTO: SpeciesVariant
   * Owning package: org.tair.db.basic
   * Property prefix: referenceEcotype
   * </p>
   * @return a java.lang.String name
   */
  public java.lang.String getName();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: false
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: false

  /**
   * <p>
   * Foreign key used by setter to query associated object
   * </p>
   * <p>
   * Added by AddNaturalKeyProperties + AddParentKeyAttributes + AddToOneAssociationAttributeProperties
   * Owning DTO: SpeciesVariant
   * Owning package: org.tair.db.basic
   * Property prefix: referenceEcotype
   * </p>
   * @return a java.lang.Long taxonId
   */
  public java.lang.Long getTaxonId();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: false
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: false

  /**
   * <p>
   * the collection of ecotypes that contain the natural variation polymorphism
   * </p>
   * <p>
   * Added by AddToManyChildCollectionProperties
   * Owning DTO: LocusNaturalVariationEcotype
   * Owning package: org.tair.db.locusdetail
   * Property prefix: ecotypes
   * </p>
   * @return a java.util.Collection<org.tair.db.locusdetail.ILocusNaturalVariationEcotype> ecotypes
   */
  public java.util.Collection<org.tair.db.locusdetail.ILocusNaturalVariationEcotype> getEcotypes();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: false
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: false
}