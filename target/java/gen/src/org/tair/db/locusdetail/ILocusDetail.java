/**
 * Copyright 2012 Carnegie Institution for Science. All rights reserved.
 */
// Generated by AndroMDA Poesys/DB cartridge: DO NOT EDIT DIRECTLY.
// Template: IDbDto.vsl

package org.tair.db.locusdetail;

import com.poesys.db.dto.IDbDto;

import com.poesys.db.dto.DtoStatusException;
import com.poesys.db.pk.IPrimaryKey;


/**
 * <p>
 * A data-access layer data-transfer-object interface for the LocusDetail. 
 * The data-transfer-object class and proxy class implement this interface, as
 * does the business-layer data-transfer-object class.
 * </p>
 * <p>
 * The central object of the subsystem, a locus, which is the location on a
 * chromosome of a gene (the concept of a physical DNA structure that maps into a
 * protein or RNA molecule and has distinct function)
 * </p>
 * <p>
 * Stereotypes:
 * </p>
 * <ul>
 *     <li>NaturalKey</li>
 *     <li>Persistent</li>
 * </ul>
 * <p>
 * Class is read/write: false
 * </p>
 * 
 * @author Poesys/DB Cartridge
 */
public interface ILocusDetail extends IDbDto {

  boolean equals(Object arg0);

  int hashCode();

  /**
   * <p>
   * Mark any children of this DTO as deleted.
   * </p>
   *
   * @throws DtoStatusException when the child cannot be set to DELETED status
   */
  void markChildrenDeleted() throws DtoStatusException;

  IPrimaryKey getPrimaryKey();
  

  /**
   * <p>
   * unique identifier for the locus as a TAIR object
   * </p>
   * <p>
   * Added by AddNaturalKeyProperties
   * Owning DTO: ${property.dto.name}
   * Owning package: ${property.dto.packageName}
   * Property prefix: locusTairObjectId
   * </p>
   * @return a java.lang.Long locusTairObjectId
   */
  public java.lang.Long getLocusTairObjectId();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: false
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: false

  /**
   * <p>
   * the locus name (usually an AGI name in the form ATcGnnnnn, where the c is the
   * chromosome (1-5, C, M)
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties
   * Owning DTO: ${property.dto.name}
   * Owning package: ${property.dto.packageName}
   * Property prefix: locusName
   * </p>
   * @return a java.lang.String locusName
   */
  public java.lang.String getLocusName();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: false
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: false

  /**
   * <p>
   * the primary symbolic name for the locus
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties
   * Owning DTO: ${property.dto.name}
   * Owning package: ${property.dto.packageName}
   * Property prefix: primarySymbol
   * </p>
   * @return a java.lang.String primarySymbol
   */
  public java.lang.String getPrimarySymbol();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: false
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: false

  /**
   * <p>
   * the full name for the primary symbolic name for the locus (may be null)
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties
   * Owning DTO: ${property.dto.name}
   * Owning package: ${property.dto.packageName}
   * Property prefix: primarySymbolFullName
   * </p>
   * @return a java.lang.String primarySymbolFullName
   */
  public java.lang.String getPrimarySymbolFullName();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: false
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: false

  /**
   * <p>
   * the chromosome on which the locus is positioned (1-5, M, C)
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties
   * Owning DTO: ${property.dto.name}
   * Owning package: ${property.dto.packageName}
   * Property prefix: chromosome
   * </p>
   * @return a java.lang.String chromosome
   */
  public java.lang.String getChromosome();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: false
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: false

  /**
   * <p>
   * the starting base pair number of the locus on the chromosome; used in displaying
   * the gene structure graphic
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties
   * Owning DTO: ${property.dto.name}
   * Owning package: ${property.dto.packageName}
   * Property prefix: spanStartPosition
   * </p>
   * @return a java.lang.Long spanStartPosition
   */
  public java.lang.Long getSpanStartPosition();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: false
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: false

  /**
   * <p>
   * the end base pair number of the locus on the chromosome; used in displaying the
   * gene structure graphic
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties
   * Owning DTO: ${property.dto.name}
   * Owning package: ${property.dto.packageName}
   * Property prefix: spanEndPosition
   * </p>
   * @return a java.lang.Long spanEndPosition
   */
  public java.lang.Long getSpanEndPosition();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: false
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: false

  /**
   * <p>
   * an optional, general summary of the locus written by a curator; not a gene model
   * summary
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties
   * Owning DTO: ${property.dto.name}
   * Owning package: ${property.dto.packageName}
   * Property prefix: curatedSummary
   * </p>
   * @return a java.lang.String curatedSummary
   */
  public java.lang.String getCuratedSummary();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: false
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: false

  /**
   * <p>
   * the number of gene models associated to this locus
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties
   * Owning DTO: ${property.dto.name}
   * Owning package: ${property.dto.packageName}
   * Property prefix: geneModelCount
   * </p>
   * @return a java.lang.Long geneModelCount
   */
  public java.lang.Long getGeneModelCount();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: false
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: false

  /**
   * <p>
   * the number of polymorphisms associated with this locus
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties
   * Owning DTO: ${property.dto.name}
   * Owning package: ${property.dto.packageName}
   * Property prefix: polymorphismCount
   * </p>
   * @return a java.lang.Long polymorphismCount
   */
  public java.lang.Long getPolymorphismCount();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: false
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: false

  /**
   * <p>
   * the number of journal articles associated with this locus
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties
   * Owning DTO: ${property.dto.name}
   * Owning package: ${property.dto.packageName}
   * Property prefix: articleCount
   * </p>
   * @return a java.lang.Long articleCount
   */
  public java.lang.Long getArticleCount();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: false
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: false

  /**
   * <p>
   * the number of conference proceedings abstracts that refer to this locus
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties
   * Owning DTO: ${property.dto.name}
   * Owning package: ${property.dto.packageName}
   * Property prefix: abstractCount
   * </p>
   * @return a java.lang.Long abstractCount
   */
  public java.lang.Long getAbstractCount();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: false
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: false

  /**
   * <p>
   * the optional name of the gene family that contains this locus
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties
   * Owning DTO: ${property.dto.name}
   * Owning package: ${property.dto.packageName}
   * Property prefix: geneFamilyName
   * </p>
   * @return a java.lang.String geneFamilyName
   */
  public java.lang.String getGeneFamilyName();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: false
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: false

  /**
   * <p>
   * the optional TAIR object id of the gene family that contains this locus; used to
   * link to the gene family page
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties
   * Owning DTO: ${property.dto.name}
   * Owning package: ${property.dto.packageName}
   * Property prefix: geneFamilyTairObjectId
   * </p>
   * @return a java.lang.Long geneFamilyTairObjectId
   */
  public java.lang.Long getGeneFamilyTairObjectId();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: false
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: false

  /**
   * <p>
   * the taxon (species name) for the species of the locus
   * </p>
   * <p>
   * Added by AddToOneAssociationRequiredObjectProperties
   * Owning DTO: Taxon
   * Owning package: org.tair.db.basic
   * Property prefix: taxon
   * </p>
   * @return a org.tair.db.basic.ITaxon taxon
   */
  public org.tair.db.basic.ITaxon getTaxon();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: false
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: false

  /**
   * <p>
   * Foreign key used by setter to query associated object
   * </p>
   * <p>
   * Added by AddNaturalKeyProperties + AddToOneAssociationAttributeProperties
   * Owning DTO: Taxon
   * Owning package: org.tair.db.basic
   * Property prefix: taxon
   * </p>
   * @return a java.lang.Long taxonId
   */
  public java.lang.Long getTaxonId();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: false
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: false

  /**
   * <p>
   * the set of annotations associated with the locus
   * </p>
   * <p>
   * Added by TransformToProperty + AddToManyAssociationCollectionProperties
   * Owning DTO: Annotation
   * Owning package: org.tair.db.locusdetail
   * Property prefix: annotations
   * </p>
   * <p>
   * This property loads lazily on demand rather than when you first query the 
   * ILocusDetail object.
   * </p>
   * @return a java.util.Collection<org.tair.db.locusdetail.IAnnotation> annotation
   * @throws java.sql.SQLException when the method can't get a SQL connection to 
   *                               load the property lazily
   */
  public java.util.Collection<org.tair.db.locusdetail.IAnnotation> getAnnotation() throws java.sql.SQLException;

  /**
   * Clear the annotation so that it will lazily reload.
   */
  public void clearAnnotation();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: false
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: false

  /**
   * <p>
   * Collection of association class objects (not the associated objects)
   * </p>
   * <p>
   * Added by AddAssociationClassCollectionProperties
   * Owning DTO: LocusAnnotation
   * Owning package: org.tair.db.locusdetail
   * Property prefix: annotations
   * </p>
   * @return a java.util.Collection<org.tair.db.locusdetail.ILocusAnnotation> locusAnnotation
   */
  public java.util.Collection<org.tair.db.locusdetail.ILocusAnnotation> getLocusAnnotation();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: false
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: true

  /**
   * <p>
   * an ordered list of updates to the locus, in the order in which the updates
   * occurred
   * </p>
   * <p>
   * Added by AddToManyChildCollectionProperties
   * Owning DTO: LocusUpdateHistory
   * Owning package: org.tair.db.locusdetail
   * Property prefix: updateHistories
   * </p>
   * @return a java.util.List<org.tair.db.locusdetail.ILocusUpdateHistory> updateHistories
   */
  public java.util.List<org.tair.db.locusdetail.ILocusUpdateHistory> getUpdateHistories();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: false
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: false

  /**
   * <p>
   * the set of gene models for the locus
   * </p>
   * <p>
   * Added by AddToManyChildCollectionProperties
   * Owning DTO: LocusGeneModel
   * Owning package: org.tair.db.locusdetail
   * Property prefix: geneModels
   * </p>
   * @return a java.util.Collection<org.tair.db.locusdetail.ILocusGeneModel> geneModels
   */
  public java.util.Collection<org.tair.db.locusdetail.ILocusGeneModel> getGeneModels();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: false
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: false

  /**
   * <p>
   * a list in alphabetical order of the "other" names for the locus, including gene
   * model names, gene aliases, symbols, and full names other than the representative
   * gene model name or the splice-variant names
   * </p>
   * <p>
   * Added by AddToManyChildCollectionProperties
   * Owning DTO: LocusOtherName
   * Owning package: org.tair.db.locusdetail
   * Property prefix: otherNames
   * </p>
   * @return a java.util.List<org.tair.db.locusdetail.ILocusOtherName> otherNames
   */
  public java.util.List<org.tair.db.locusdetail.ILocusOtherName> getOtherNames();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: false
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: false

  /**
   * <p>
   * the set of locations for the locus on various maps
   * </p>
   * <p>
   * Added by AddToManyChildCollectionProperties
   * Owning DTO: LocusPhysicalMapCoordinates
   * Owning package: org.tair.db.locusdetail
   * Property prefix: locations
   * </p>
   * @return a java.util.Collection<org.tair.db.locusdetail.ILocusPhysicalMapCoordinates> locations
   */
  public java.util.Collection<org.tair.db.locusdetail.ILocusPhysicalMapCoordinates> getLocations();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: false
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: false

  /**
   * <p>
   * the alphabetically ordered list of links (URLs) to third-party resources
   * relevant to the locus
   * </p>
   * <p>
   * Added by AddToManyChildCollectionProperties
   * Owning DTO: LocusResourceLink
   * Owning package: org.tair.db.locusdetail
   * Property prefix: resourceLinks
   * </p>
   * @return a java.util.List<org.tair.db.locusdetail.ILocusResourceLink> resourceLinks
   */
  public java.util.List<org.tair.db.locusdetail.ILocusResourceLink> getResourceLinks();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: false
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: false

  /**
   * <p>
   * the ordered list of comments associated with a locus; the list is ordered by the
   * date entered in descending order
   * </p>
   * <p>
   * Added by AddToManyChildCollectionProperties
   * Owning DTO: LocusComment
   * Owning package: org.tair.db.locusdetail
   * Property prefix: comments
   * </p>
   * @return a java.util.List<org.tair.db.locusdetail.ILocusComment> comments
   */
  public java.util.List<org.tair.db.locusdetail.ILocusComment> getComments();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: false
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: false

  /**
   * <p>
   * the ordered list of community members to whom the presence of the locus in the
   * database is due
   * </p>
   * <p>
   * Added by AddToManyChildCollectionProperties
   * Owning DTO: LocusAttribution
   * Owning package: org.tair.db.locusdetail
   * Property prefix: attributions
   * </p>
   * @return a java.util.List<org.tair.db.locusdetail.ILocusAttribution> attributions
   */
  public java.util.List<org.tair.db.locusdetail.ILocusAttribution> getAttributions();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: false
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: false

  /**
   * 
   * <p>
   * Added by AddToManyChildCollectionProperties
   * Owning DTO: LocusOtherSymbol
   * Owning package: org.tair.db.locusdetail
   * Property prefix: otherSymbols
   * </p>
   * @return a java.util.List<org.tair.db.locusdetail.ILocusOtherSymbol> otherSymbols
   */
  public java.util.List<org.tair.db.locusdetail.ILocusOtherSymbol> getOtherSymbols();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: false
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: false

  /**
   * <p>
   * the polymorphisms that occur within the locus
   * </p>
   * <p>
   * Added by AddToManyChildCollectionProperties
   * Owning DTO: LocusPolymorphism
   * Owning package: org.tair.db.locusdetail
   * Property prefix: polymorphisms
   * </p>
   * @return a java.util.Collection<org.tair.db.locusdetail.ILocusPolymorphism> polymorphisms
   */
  public java.util.Collection<org.tair.db.locusdetail.ILocusPolymorphism> getPolymorphisms();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: false
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: false

  /**
   * <p>
   * the set of references that refer to this locus; limited to a certain number of
   * references ordered by publication year (descending) and number of loci mentioned
   * (descending) to identify the references most likely to be of use
   * </p>
   * <p>
   * Added by AddToManyChildCollectionProperties
   * Owning DTO: Reference
   * Owning package: org.tair.db.locusdetail
   * Property prefix: references
   * </p>
   * <p>
   * This property loads lazily on demand rather than when you first query the 
   * ILocusDetail object.
   * </p>
   * @return a java.util.List<org.tair.db.locusdetail.IReference> references
   * @throws java.sql.SQLException when the method can't get a SQL connection to 
   *                               load the property lazily
   */
  public java.util.List<org.tair.db.locusdetail.IReference> getReferences() throws java.sql.SQLException;

  /**
   * Clear the references so that it will lazily reload.
   */
  public void clearReferences();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: false
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: false

  /**
   * <p>
   * the set of BACs that contain the parent locus
   * </p>
   * <p>
   * Added by AddToManyChildCollectionProperties
   * Owning DTO: LocusBac
   * Owning package: org.tair.db.locusdetail
   * Property prefix: bacs
   * </p>
   * @return a java.util.Collection<org.tair.db.locusdetail.ILocusBac> bacs
   */
  public java.util.Collection<org.tair.db.locusdetail.ILocusBac> getBacs();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: false
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: false

  /**
   * <p>
   * the EST clone ends that tag the locus
   * </p>
   * <p>
   * Added by AddToManyChildCollectionProperties
   * Owning DTO: LocuslEst
   * Owning package: org.tair.db.locusdetail
   * Property prefix: ests
   * </p>
   * @return a java.util.Collection<org.tair.db.locusdetail.ILocuslEst> ests
   */
  public java.util.Collection<org.tair.db.locusdetail.ILocuslEst> getEsts();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: false
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: false

  /**
   * 
   * <p>
   * Added by AddToManyChildCollectionProperties
   * Owning DTO: LocusCdna
   * Owning package: org.tair.db.locusdetail
   * Property prefix: cDnas
   * </p>
   * @return a java.util.Collection<org.tair.db.locusdetail.ILocusCdna> cDnas
   */
  public java.util.Collection<org.tair.db.locusdetail.ILocusCdna> getCDnas();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: false
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: false
}