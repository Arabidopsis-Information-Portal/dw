/**
 * Copyright 2012 Carnegie Institution for Science. All rights reserved.
 */
// Generated by AndroMDA Poesys/DB cartridge: DO NOT EDIT DIRECTLY.
// Template: IDbDto.vsl

package org.tair.db.locusdetail;

import com.poesys.db.dto.IDbDto;

import com.poesys.db.dto.DtoStatusException;
import com.poesys.db.pk.IPrimaryKey;


/**
 * <p>
 * A data-access layer data-transfer-object interface for the LocusGeneModel. 
 * The data-transfer-object class and proxy class implement this interface, as
 * does the business-layer data-transfer-object class.
 * </p>
 * <p>
 * The set of gene models of the parent locus excluding the representative gene
 * model
 * </p>
 * <p>
 * Stereotypes:
 * </p>
 * <ul>
 *     <li>CompositeKey</li>
 *     <li>Persistent</li>
 * </ul>
 * <p>
 * Class is read/write: false
 * </p>
 * 
 * @author Poesys/DB Cartridge
 */
public interface ILocusGeneModel extends IDbDto {

  boolean equals(Object arg0);

  int hashCode();

  /**
   * <p>
   * Mark any children of this DTO as deleted.
   * </p>
   *
   * @throws DtoStatusException when the child cannot be set to DELETED status
   */
  void markChildrenDeleted() throws DtoStatusException;

  IPrimaryKey getPrimaryKey();
  

  /**
   * <p>
   * Composite super-key attribute that uniquely identifies child combined with child sub-key and any other parent super-keys
   * </p>
   * <p>
   * Added by AddNaturalKeyProperties + AddParentKeyAttributes
   * Owning DTO: ${property.dto.name}
   * Owning package: ${property.dto.packageName}
   * Property prefix: locusTairObjectId
   * </p>
   * @return a java.lang.Long locusTairObjectId
   */
  public java.lang.Long getLocusTairObjectId();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: false
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: false

  /**
   * <p>
   * gene model name; usually in the format ATcGnnnnn.n, where the first part is the
   * locus name and the part following the dot is the model number; unique within the
   * locus
   * </p>
   * <p>
   * Added by AddExplicitSubKeyProperties + addNaturalSubkeyOnClass
   * Owning DTO: ${property.dto.name}
   * Owning package: ${property.dto.packageName}
   * Property prefix: geneModelName
   * </p>
   * @return a java.lang.String geneModelName
   */
  public java.lang.String getGeneModelName();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: false
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: false

  /**
   * <p>
   * the type of the gene model, such as "protein coding"
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties
   * Owning DTO: ${property.dto.name}
   * Owning package: ${property.dto.packageName}
   * Property prefix: geneModelType
   * </p>
   * @return a java.lang.String geneModelType
   */
  public java.lang.String getGeneModelType();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: false
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: false

  /**
   * <p>
   * whether this gene model is the representative gene model for the parent locus,
   * meaning it acts as the default gene model in situations where no gene model is
   * specified
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties
   * Owning DTO: ${property.dto.name}
   * Owning package: ${property.dto.packageName}
   * Property prefix: representative
   * </p>
   * @return a java.lang.Boolean representative
   */
  public java.lang.Boolean getRepresentative();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: false
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: false

  /**
   * <p>
   * whether this gene model represents a splice variant
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties
   * Owning DTO: ${property.dto.name}
   * Owning package: ${property.dto.packageName}
   * Property prefix: spliceVariant
   * </p>
   * @return a java.lang.Boolean spliceVariant
   */
  public java.lang.Boolean getSpliceVariant();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: false
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: false

  /**
   * <p>
   * a computationally generated description of the gene model, or "none" if there is
   * no such description
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties
   * Owning DTO: ${property.dto.name}
   * Owning package: ${property.dto.packageName}
   * Property prefix: computationalDescription
   * </p>
   * @return a java.lang.String computationalDescription
   */
  public java.lang.String getComputationalDescription();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: false
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: false

  /**
   * <p>
   * an optional curator-written summary for the gene model; null if the summary is
   * the same as the curated summary for the parent locus
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties
   * Owning DTO: ${property.dto.name}
   * Owning package: ${property.dto.packageName}
   * Property prefix: curatedSummary
   * </p>
   * @return a java.lang.String curatedSummary
   */
  public java.lang.String getCuratedSummary();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: false
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: false

  /**
   * <p>
   * an optional confidence score string that rates the gene models according to some
   * confidence algorithm
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties
   * Owning DTO: ${property.dto.name}
   * Owning package: ${property.dto.packageName}
   * Property prefix: confidence
   * </p>
   * @return a java.lang.String confidence
   */
  public java.lang.String getConfidence();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: false
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: false

  /**
   * 
   * <p>
   * Added by AddToOneAssociationRequiredObjectProperties
   * Owning DTO: LocusDetail
   * Owning package: org.tair.db.locusdetail
   * Property prefix: locus
   * </p>
   * @return a org.tair.db.locusdetail.ILocusDetail locus
   */
  public org.tair.db.locusdetail.ILocusDetail getLocus();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: false
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: false

  /**
   * <p>
   * the set of annotations for the gene model
   * </p>
   * <p>
   * Added by TransformToProperty + AddToManyAssociationCollectionProperties
   * Owning DTO: Annotation
   * Owning package: org.tair.db.locusdetail
   * Property prefix: annotations
   * </p>
   * <p>
   * This property loads lazily on demand rather than when you first query the 
   * ILocusGeneModel object.
   * </p>
   * @return a java.util.Collection<org.tair.db.locusdetail.IAnnotation> annotation
   * @throws java.sql.SQLException when the method can't get a SQL connection to 
   *                               load the property lazily
   */
  public java.util.Collection<org.tair.db.locusdetail.IAnnotation> getAnnotation() throws java.sql.SQLException;

  /**
   * Clear the annotation so that it will lazily reload.
   */
  public void clearAnnotation();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: false
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: false

  /**
   * <p>
   * the set of polymorphisms at sites on the locus
   * </p>
   * <p>
   * Added by TransformToProperty + AddToManyAssociationCollectionProperties
   * Owning DTO: LocusPolymorphism
   * Owning package: org.tair.db.locusdetail
   * Property prefix: polymorphisms
   * </p>
   * <p>
   * This property loads lazily on demand rather than when you first query the 
   * ILocusGeneModel object.
   * </p>
   * @return a java.util.Collection<org.tair.db.locusdetail.ILocusPolymorphism> polymorphism
   * @throws java.sql.SQLException when the method can't get a SQL connection to 
   *                               load the property lazily
   */
  public java.util.Collection<org.tair.db.locusdetail.ILocusPolymorphism> getPolymorphism() throws java.sql.SQLException;

  /**
   * Clear the polymorphism so that it will lazily reload.
   */
  public void clearPolymorphism();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: false
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: false

  /**
   * <p>
   * Collection of association class objects (not the associated objects)
   * </p>
   * <p>
   * Added by AddAssociationClassCollectionProperties
   * Owning DTO: LocusGeneModelAnnotation
   * Owning package: org.tair.db.locusdetail
   * Property prefix: annotations
   * </p>
   * @return a java.util.Collection<org.tair.db.locusdetail.ILocusGeneModelAnnotation> locusGeneModelAnnotation
   */
  public java.util.Collection<org.tair.db.locusdetail.ILocusGeneModelAnnotation> getLocusGeneModelAnnotation();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: false
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: true

  /**
   * <p>
   * Collection of association class objects (not the associated objects)
   * </p>
   * <p>
   * Added by AddAssociationClassCollectionProperties
   * Owning DTO: PolymorphismSite
   * Owning package: org.tair.db.locusdetail
   * Property prefix: polymorphisms
   * </p>
   * @return a java.util.Collection<org.tair.db.locusdetail.IPolymorphismSite> polymorphismSite
   */
  public java.util.Collection<org.tair.db.locusdetail.IPolymorphismSite> getPolymorphismSite();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: false
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: true

  /**
   * <p>
   * an ordered list of coordinates for each feature (intron or exon) of the gene
   * model, ordered by starting position
   * </p>
   * <p>
   * Added by AddToManyChildCollectionProperties
   * Owning DTO: ModelFeature
   * Owning package: org.tair.db.locusdetail
   * Property prefix: features
   * </p>
   * @return a java.util.List<org.tair.db.locusdetail.IModelFeature> features
   */
  public java.util.List<org.tair.db.locusdetail.IModelFeature> getFeatures();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: false
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: false

  /**
   * <p>
   * the cDNA sequences from the locus gene model
   * </p>
   * <p>
   * Added by AddToManyChildCollectionProperties
   * Owning DTO: LocusGeneModelCdna
   * Owning package: org.tair.db.locusdetail
   * Property prefix: cdnas
   * </p>
   * @return a java.util.Collection<org.tair.db.locusdetail.ILocusGeneModelCdna> cdnas
   */
  public java.util.Collection<org.tair.db.locusdetail.ILocusGeneModelCdna> getCdnas();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: false
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: false

  /**
   * <p>
   * the protein model for a protein coding gene model that models the translation of
   * the gene sequence into the protein amino acid sequence
   * </p>
   * <p>
   * Added by AddToManyChildCollectionProperties
   * Owning DTO: ProteinModel
   * Owning package: org.tair.db.locusdetail
   * Property prefix: proteinModel
   * </p>
   * @return a java.util.Collection<org.tair.db.locusdetail.IProteinModel> proteinModel
   */
  public java.util.Collection<org.tair.db.locusdetail.IProteinModel> getProteinModel();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: false
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: false
}