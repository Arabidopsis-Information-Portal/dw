/**
 * Copyright 2011 Carnegie Institution for Science. All rights reserved.
 */
// Generated by AndroMDA Poesys/DB cartridge: DO NOT EDIT DIRECTLY.
// Template: IDbDto.vsl

package org.tair.db.locusdetail;

import com.poesys.db.dto.IDbDto;

import com.poesys.db.dto.DtoStatusException;
import com.poesys.db.pk.IPrimaryKey;


/**
 * <p>
 * A data-access layer data-transfer-object interface for the LocusProteinModel. 
 * The data-transfer-object class and proxy class implement this interface, as
 * does the business-layer data-transfer-object class.
 * </p>
 * <p>
 * a protein model for a parent locus
 * </p>
 * <p>
 * Stereotypes:
 * </p>
 * <ul>
 *     <li>CompositeKey</li>
 *     <li>Persistent</li>
 * </ul>
 * <p>
 * Class is read/write: false
 * </p>
 * 
 * @author Poesys/DB Cartridge
 */
public interface ILocusProteinModel extends IDbDto {

  boolean equals(Object arg0);

  int hashCode();

  /**
   * <p>
   * Mark any children of this DTO as deleted.
   * </p>
   *
   * @throws DtoStatusException when the child cannot be set to DELETED status
   */
  void markChildrenDeleted() throws DtoStatusException;

  IPrimaryKey getPrimaryKey();
  

  /**
   * <p>
   * Composite super-key attribute that uniquely identifies child combined with child sub-key and any other parent super-keys
   * </p>
   * <p>
   * Added by AddNaturalKeyProperties + AddParentKeyAttributes
   * Owning DTO: ${property.dto.name}
   * Owning package: ${property.dto.packageName}
   * Property prefix: locusTairObjectId
   * </p>
   * @return a java.lang.Long locusTairObjectId
   */
  public java.lang.Long getLocusTairObjectId();

  /**
   * <p>
   * the amino-acid (aa) length of the protein sequence
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties
   * Owning DTO: ${property.dto.name}
   * Owning package: ${property.dto.packageName}
   * Property prefix: length
   * </p>
   * @return a java.lang.Integer length
   */
  public java.lang.Integer getLength();

  /**
   * <p>
   * the computed molecular weight of the sequence (Da)
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties
   * Owning DTO: ${property.dto.name}
   * Owning package: ${property.dto.packageName}
   * Property prefix: molecularWeight
   * </p>
   * @return a java.lang.Double molecularWeight
   */
  public java.lang.Double getMolecularWeight();

  /**
   * <p>
   * the calculated isoelectric point (Pi) of the protein sequence
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties
   * Owning DTO: ${property.dto.name}
   * Owning package: ${property.dto.packageName}
   * Property prefix: isoelectricPoint
   * </p>
   * @return a java.lang.Double isoelectricPoint
   */
  public java.lang.Double getIsoelectricPoint();

  /**
   * <p>
   * the TAIR object id for the sequence; used in links
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties
   * Owning DTO: ${property.dto.name}
   * Owning package: ${property.dto.packageName}
   * Property prefix: sequenceTairObjectId
   * </p>
   * @return a java.lang.Long sequenceTairObjectId
   */
  public java.lang.Long getSequenceTairObjectId();

  /**
   * <p>
   * the locus in which the protein model is located
   * </p>
   * <p>
   * Added by AddToOneAssociationRequiredObjectProperties
   * Owning DTO: LocusDetail
   * Owning package: org.tair.db.locusdetail
   * Property prefix: locus
   * </p>
   * @return a org.tair.db.locusdetail.ILocusDetail locus
   */
  public org.tair.db.locusdetail.ILocusDetail getLocus();

  /**
   * <p>
   * the protein domain instances that appear on a specific locus protein model
   * </p>
   * <p>
   * Added by TransformToProperty + AddToManyAssociationCollectionProperties
   * Owning DTO: Domain
   * Owning package: org.tair.db.locusdetail
   * Property prefix: domains
   * </p>
   * <p>
   * This property loads lazily on demand rather than when you first query the 
   * ILocusProteinModel object.
   * </p>
   * @return a java.util.Collection<org.tair.db.locusdetail.IDomain> domain
   * @throws java.sql.SQLException when the method can't get a SQL connection to 
   *                               load the property lazily
   */
  public java.util.Collection<org.tair.db.locusdetail.IDomain> getDomain() throws java.sql.SQLException;

  /**
   * Clear the domain so that it will lazily reload.
   */
  public void clearDomain();

  /**
   * <p>
   * Collection of association class objects (not the associated objects)
   * </p>
   * <p>
   * Added by AddAssociationClassCollectionProperties
   * Owning DTO: LocusProteinModelDomain
   * Owning package: org.tair.db.locusdetail
   * Property prefix: domains
   * </p>
   * @return a java.util.Collection<org.tair.db.locusdetail.ILocusProteinModelDomain> locusProteinModelDomain
   */
  public java.util.Collection<org.tair.db.locusdetail.ILocusProteinModelDomain> getLocusProteinModelDomain();

  /**
   * <p>
   * the set of third-party resource links for a locus protein model
   * </p>
   * <p>
   * Added by AddToManyChildCollectionProperties
   * Owning DTO: LocusProteinResourceLink
   * Owning package: org.tair.db.locusdetail
   * Property prefix: resourceLinks
   * </p>
   * @return a java.util.Collection<org.tair.db.locusdetail.ILocusProteinResourceLink> resourceLinks
   */
  public java.util.Collection<org.tair.db.locusdetail.ILocusProteinResourceLink> getResourceLinks();
}