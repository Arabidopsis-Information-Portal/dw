/**
 * Copyright 2012 Carnegie Institution for Science. All rights reserved.
 */
// Generated by AndroMDA Poesys/DB cartridge: DO NOT EDIT DIRECTLY.
// Template: AbstractQueryAssociatedOneToManyObjects.vsl

package org.tair.db.genomicregion.sql;


import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import com.poesys.db.ConstraintViolationException;
import com.poesys.db.InvalidParametersException;
import com.poesys.db.dao.query.IParameterizedQuerySql;
import com.poesys.db.pk.IPrimaryKey;


/**
 * <p>
 * A query Command pattern object that implements a SQL query of a collection of 
 * Region objects using the primary key of an associated 
 * ReferenceGenome object through the association Regions. This
 * is a many-to-one association from Region to ReferenceGenome.
 * </p>
 * <p>
 * This SQL specification contains a SQL statement that queries a collection of
 * Region objects from the database using the foreign key type
 * ReferenceGenome.
 * </p>
 * 
 * @author Poesys/DB Cartridge
 */
public abstract class AbstractQueryRegionsByReferenceGenome 
    implements IParameterizedQuerySql<org.tair.db.genomicregion.IRegion, org.tair.db.genomicregion.IReferenceGenome> {
  /** SQL query statement for Region */
  private static final String SQL =
    "SELECT Region.tairObjectIdTairObjectId, Region.name, Region.dateEntered, Region.parentRegionTairObjectId, Region.genome, Transcript.sequence, Transcript.seqTairObjectId, Transcript.genbankAccession, Transcript.primarySymbol, Transcript.primarySymbolFullName, Transcript.startPosition, Transcript.endPosition, Transcript.length, Transcript.orientation, Transcript.basis, Transcript.derived, Transcript.representativeGeneModel, Transcript.transcribesTairObjectId, Chromosome.sequence, Contig.sequence, Gene.curatedSummary, CASE WHEN Transcript.tairObjectIdTairObjectId IS NOT NULL THEN 'Transcript' WHEN Chromosome.tairObjectIdTairObjectId IS NOT NULL THEN 'Chromosome' WHEN Contig.tairObjectIdTairObjectId IS NOT NULL THEN 'Contig' WHEN Gene.tairObjectIdTairObjectId IS NOT NULL THEN 'Gene' ELSE NULL END AS discriminant FROM Region LEFT OUTER JOIN Transcript Transcript ON Region.tairObjectIdTairObjectId = Transcript.tairObjectIdTairObjectId LEFT OUTER JOIN Chromosome Chromosome ON Region.tairObjectIdTairObjectId = Chromosome.tairObjectIdTairObjectId LEFT OUTER JOIN Contig Contig ON Region.tairObjectIdTairObjectId = Contig.tairObjectIdTairObjectId LEFT OUTER JOIN Gene Gene ON Region.tairObjectIdTairObjectId = Gene.tairObjectIdTairObjectId WHERE Region.genome = ?";

  public void bindParameters(PreparedStatement stmt, org.tair.db.genomicregion.IReferenceGenome parameters)
      throws SQLException {
    // Set the parameters starting with the first parameter.
    parameters.getPrimaryKey().setParams(stmt, 1);
  }

  public String getParameterValues(org.tair.db.genomicregion.IReferenceGenome parameters) {
    // Create the output string with the key parameters.
    return parameters.getPrimaryKey().getValueList();
  }

  public org.tair.db.genomicregion.IRegion getData(ResultSet rs) throws SQLException,
      ConstraintViolationException {
    // Region is an abstract class, cannot query the object data directly
    throw new com.poesys.db.DbErrorException("Cannot query an abstract data object directly");
  }

  public IPrimaryKey getPrimaryKey(ResultSet rs) throws SQLException,
      InvalidParametersException {
    return org.tair.db.genomicregion.GenomicregionFactory.getRegionPrimaryKey(rs, "");
  }

  public String getSql() {
    return SQL;
  }
}