/**
 * Copyright 2012 Carnegie Institution for Science. All rights reserved.
 */
// Generated by AndroMDA Poesys/DB cartridge: DO NOT EDIT DIRECTLY.
// Template: AbstractInsert.vsl

package org.tair.db.genomicregion.sql;



import java.sql.PreparedStatement;
import java.sql.SQLException;

import com.poesys.db.dao.insert.IInsertSql;
import com.poesys.db.pk.IPrimaryKey;


/**
 * SQL statement specification for inserting a Transcript
 * 
 * @author Robert J. Muller
 */
public class AbstractInsertTranscript implements IInsertSql<org.tair.db.genomicregion.ITranscript> {
  private static final String SQL =
    "INSERT INTO Transcript (tairObjectIdTairObjectId, sequence, seqTairObjectId, genbankAccession, primarySymbol, primarySymbolFullName, startPosition, endPosition, length, orientation, basis, derived, representativeGeneModel, transcribesTairObjectId) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?)";

  public String getSql(IPrimaryKey key) {
    return SQL;
  }

  public void setParams(PreparedStatement stmt, int index, org.tair.db.genomicregion.ITranscript object)
      throws SQLException {
    stmt.setString(index, object.getSequence());
    index++;
    stmt.setLong(index, object.getSeqTairObjectId());
    index++;
    stmt.setString(index, object.getGenbankAccession());
    index++;
    stmt.setString(index, object.getPrimarySymbol());
    index++;
    stmt.setString(index, object.getPrimarySymbolFullName());
    index++;
    stmt.setLong(index, object.getStartPosition());
    index++;
    stmt.setLong(index, object.getEndPosition());
    index++;
    stmt.setLong(index, object.getLength());
    index++;
    stmt.setString(index, object.getOrientation());
    index++;
    stmt.setString(index, object.getBasis());
    index++;
    stmt.setInt(index, object.getDerived() ? 1 : 0);
    index++;
    stmt.setInt(index, object.getRepresentativeGeneModel() ? 1 : 0);
    index++;
    stmt.setLong(index, object.getTranscribesTairObjectId());
    index++;
  }
}
