/**
 * Copyright 2012 Carnegie Institution for Science. All rights reserved.
 */
// Generated by AndroMDA Poesys/DB cartridge: DO NOT EDIT DIRECTLY.
// Template: AbstractDbDtoProxy.vsl

package org.tair.db.genomicregion;


import com.poesys.db.dto.AbstractLazyLoadingDtoProxy;


/**
 * <p>
 * A data-access layer data-transfer object (DTO) lazy-loading proxy for the 
 * Transcript. This class is an abstract class that contains AndroMDA 
 * generated code; change nothing in this class. Instead, override any methods 
 * in the concrete subclass generated in the same package. AndroMDA will 
 * overwrite this class each time you run it but will never overwrite the concrete subclass.
 * </p>
 * <p>
 * SO:0000673: An RNA synthesized on a DNA or RNA template by an RNA polymerase.
 * </p>
 *
 * @author Poesys/DB Cartridge
 */
public abstract class AbstractTranscriptProxy extends AbstractLazyLoadingDtoProxy implements ITranscript {
  /** Default serial version UID for the Serializable DTO */
  private static final long serialVersionUID = 1L;

  // Lazy-loading query setter strategy nested classes for single-object associations
  


  /**
   * Read-Object setter for de-serializing nested ests collection
   *
   * Source: AddToManyChildCollectionProperties
   *
   * @see org.tair.db.genomicregion.sql.QueryEst
   */
  private class ReadEstsSetter 
      extends com.poesys.db.dto.AbstractCollectionReadSetter<org.tair.db.genomicregion.IEst> {
    private static final long serialVersionUID = 1L;

    /**
     * Create a ReadEstsSetter object to read the ests collection.
     */
    public ReadEstsSetter() {
      super("org.tair.db.genomicregion", 2147483647);
    }

    @Override
    protected String getClassName() {
      return org.tair.db.genomicregion.Est.class.getName();
    }

    @Override
    protected java.util.Collection<org.tair.db.genomicregion.IEst> getObjectCollection() {
      java.util.Collection<org.tair.db.genomicregion.IEst> ests =  ((org.tair.db.genomicregion.Transcript)dto).getEsts();
      return ests;
    }

    @Override
    protected java.util.List<com.poesys.db.pk.IPrimaryKey> getPrimaryKeys() {
      return ((org.tair.db.genomicregion.Transcript)dto).estsKeys;
    }

    @Override
    protected com.poesys.db.dao.query.IKeyQuerySql<org.tair.db.genomicregion.IEst> getSql() {
      return new org.tair.db.genomicregion.sql.QueryEst();
    }

    @Override
    protected void set(java.util.Collection<org.tair.db.genomicregion.IEst> collection) {
      ((org.tair.db.genomicregion.Transcript)dto).ests = collection;
    }
  }


  public void addEstsEst(org.tair.db.genomicregion.IEst object) {
    ((Transcript)dto).addEstsEst(object);
  }



  /**
   * Read-Object setter for de-serializing nested proteins collection
   *
   * Source: AddToManyChildCollectionProperties
   *
   * @see org.tair.db.genomicregion.sql.QueryPolypeptide
   */
  private class ReadProteinsSetter 
      extends com.poesys.db.dto.AbstractCollectionReadSetter<org.tair.db.genomicregion.IPolypeptide> {
    private static final long serialVersionUID = 1L;

    /**
     * Create a ReadProteinsSetter object to read the proteins collection.
     */
    public ReadProteinsSetter() {
      super("org.tair.db.genomicregion", 2147483647);
    }

    @Override
    protected String getClassName() {
      return org.tair.db.genomicregion.Polypeptide.class.getName();
    }

    @Override
    protected java.util.Collection<org.tair.db.genomicregion.IPolypeptide> getObjectCollection() {
      java.util.Collection<org.tair.db.genomicregion.IPolypeptide> proteins =  ((org.tair.db.genomicregion.Transcript)dto).getProteins();
      return proteins;
    }

    @Override
    protected java.util.List<com.poesys.db.pk.IPrimaryKey> getPrimaryKeys() {
      return ((org.tair.db.genomicregion.Transcript)dto).proteinsKeys;
    }

    @Override
    protected com.poesys.db.dao.query.IKeyQuerySql<org.tair.db.genomicregion.IPolypeptide> getSql() {
      return new org.tair.db.genomicregion.sql.QueryPolypeptide();
    }

    @Override
    protected void set(java.util.Collection<org.tair.db.genomicregion.IPolypeptide> collection) {
      ((org.tair.db.genomicregion.Transcript)dto).proteins = collection;
    }
  }


  public void addProteinsPolypeptide(org.tair.db.genomicregion.IPolypeptide object) {
    ((Transcript)dto).addProteinsPolypeptide(object);
  }



  /**
   * Read-Object setter for de-serializing nested experimentalCdnas collection
   *
   * Source: AddToManyChildCollectionProperties
   *
   * @see org.tair.db.genomicregion.sql.QueryExperimentalCdna
   */
  private class ReadExperimentalCdnasSetter 
      extends com.poesys.db.dto.AbstractCollectionReadSetter<org.tair.db.genomicregion.IExperimentalCdna> {
    private static final long serialVersionUID = 1L;

    /**
     * Create a ReadExperimentalCdnasSetter object to read the experimentalCdnas collection.
     */
    public ReadExperimentalCdnasSetter() {
      super("org.tair.db.genomicregion", 2147483647);
    }

    @Override
    protected String getClassName() {
      return org.tair.db.genomicregion.ExperimentalCdna.class.getName();
    }

    @Override
    protected java.util.Collection<org.tair.db.genomicregion.IExperimentalCdna> getObjectCollection() {
      java.util.Collection<org.tair.db.genomicregion.IExperimentalCdna> experimentalCdnas =  ((org.tair.db.genomicregion.Transcript)dto).getExperimentalCdnas();
      return experimentalCdnas;
    }

    @Override
    protected java.util.List<com.poesys.db.pk.IPrimaryKey> getPrimaryKeys() {
      return ((org.tair.db.genomicregion.Transcript)dto).experimentalCdnasKeys;
    }

    @Override
    protected com.poesys.db.dao.query.IKeyQuerySql<org.tair.db.genomicregion.IExperimentalCdna> getSql() {
      return new org.tair.db.genomicregion.sql.QueryExperimentalCdna();
    }

    @Override
    protected void set(java.util.Collection<org.tair.db.genomicregion.IExperimentalCdna> collection) {
      ((org.tair.db.genomicregion.Transcript)dto).experimentalCdnas = collection;
    }
  }


  public void addExperimentalCdnasExperimentalCdna(org.tair.db.genomicregion.IExperimentalCdna object) {
    ((Transcript)dto).addExperimentalCdnasExperimentalCdna(object);
  }

  /**
   * Create a TranscriptProxy. The concrete subclass must call this constructor.
   *
   * @param dto the DTO to proxy
   */
  public AbstractTranscriptProxy(Transcript dto) {
    super(dto);

    // Setter arrays
    readObjectSetters = new java.util.concurrent.CopyOnWriteArrayList<com.poesys.db.dto.ISet>();
    readObjectSetters.add(new ReadEstsSetter());
    readObjectSetters.add(new ReadProteinsSetter());
    readObjectSetters.add(new ReadExperimentalCdnasSetter());
  }

  @Override
  public boolean equals(Object obj) {
    AbstractTranscriptProxy otherProxy = (AbstractTranscriptProxy)obj;
    return ((Transcript)dto).equals(otherProxy.dto);
  }

  @Override
  public int hashCode() {
    return ((Transcript)dto).hashCode();
  }
  // Inherited properties

  public java.lang.Long getTairObjectId() {
    return ((ITranscript)dto).getTairObjectId();
  }

  public org.tair.db.genomicregion.IRegion getParent() {
    return ((ITranscript)dto).getParent();
  }

  /**
   * Set the property parent.
   * 
   * @param parent the value for the property
   */
  public void setParent(org.tair.db.genomicregion.IRegion parent)
      {
    ((Transcript)dto).setParent(parent);
  }

  public org.tair.db.genomicregion.IReferenceGenome getReferenceGenome() {
    return ((ITranscript)dto).getReferenceGenome();
  }

  /**
   * Set the property referenceGenome.
   * 
   * @param referenceGenome the value for the property
   * @throws com.poesys.db.InvalidParametersException when the property value is null
   */
  public void setReferenceGenome(org.tair.db.genomicregion.IReferenceGenome referenceGenome)
      throws com.poesys.db.InvalidParametersException {
    ((Transcript)dto).setReferenceGenome(referenceGenome);
  }

  public java.lang.String getName() {
    return ((ITranscript)dto).getName();
  }

  /**
   * Set the property name.
   * 
   * @param name the value for the property
   * @throws com.poesys.db.InvalidParametersException when the property value is null
   */
  public void setName(java.lang.String name)
      throws com.poesys.db.InvalidParametersException {
    ((Transcript)dto).setName(name);
  }

  public java.sql.Timestamp getDateEntered() {
    return ((ITranscript)dto).getDateEntered();
  }

  /**
   * Set the property dateEntered.
   * 
   * @param dateEntered the value for the property
   * @throws com.poesys.db.InvalidParametersException when the property value is null
   */
  public void setDateEntered(java.sql.Timestamp dateEntered)
      throws com.poesys.db.InvalidParametersException {
    ((Transcript)dto).setDateEntered(dateEntered);
  }

  public java.lang.Long getParentRegionTairObjectId() {
    return ((ITranscript)dto).getParentRegionTairObjectId();
  }

  public java.lang.String getGenome() {
    return ((ITranscript)dto).getGenome();
  }

  // Local properties (attributes, associations, and association classes)

  // Source: AddLocalAttributeProperties
  public java.lang.String getSequence() {
    return ((Transcript)dto).getSequence();
  }

  public void setSequence(java.lang.String sequence)
      throws com.poesys.db.InvalidParametersException {
    ((Transcript)dto).setSequence(sequence);
  }

  // Source: AddLocalAttributeProperties
  public java.lang.Long getSeqTairObjectId() {
    return ((Transcript)dto).getSeqTairObjectId();
  }

  public void setSeqTairObjectId(java.lang.Long seqTairObjectId)
      throws com.poesys.db.InvalidParametersException {
    ((Transcript)dto).setSeqTairObjectId(seqTairObjectId);
  }

  // Source: AddLocalAttributeProperties
  public java.lang.String getGenbankAccession() {
    return ((Transcript)dto).getGenbankAccession();
  }

  public void setGenbankAccession(java.lang.String genbankAccession)
      {
    ((Transcript)dto).setGenbankAccession(genbankAccession);
  }

  // Source: AddLocalAttributeProperties
  public java.lang.String getPrimarySymbol() {
    return ((Transcript)dto).getPrimarySymbol();
  }

  public void setPrimarySymbol(java.lang.String primarySymbol)
      {
    ((Transcript)dto).setPrimarySymbol(primarySymbol);
  }

  // Source: AddLocalAttributeProperties
  public java.lang.String getPrimarySymbolFullName() {
    return ((Transcript)dto).getPrimarySymbolFullName();
  }

  public void setPrimarySymbolFullName(java.lang.String primarySymbolFullName)
      {
    ((Transcript)dto).setPrimarySymbolFullName(primarySymbolFullName);
  }

  // Source: AddLocalAttributeProperties
  public java.lang.Long getStartPosition() {
    return ((Transcript)dto).getStartPosition();
  }

  public void setStartPosition(java.lang.Long startPosition)
      throws com.poesys.db.InvalidParametersException {
    ((Transcript)dto).setStartPosition(startPosition);
  }

  // Source: AddLocalAttributeProperties
  public java.lang.Long getEndPosition() {
    return ((Transcript)dto).getEndPosition();
  }

  public void setEndPosition(java.lang.Long endPosition)
      throws com.poesys.db.InvalidParametersException {
    ((Transcript)dto).setEndPosition(endPosition);
  }

  // Source: AddLocalAttributeProperties
  public java.lang.Long getLength() {
    return ((Transcript)dto).getLength();
  }

  public void setLength(java.lang.Long length)
      throws com.poesys.db.InvalidParametersException {
    ((Transcript)dto).setLength(length);
  }

  // Source: AddLocalAttributeProperties
  public java.lang.String getOrientation() {
    return ((Transcript)dto).getOrientation();
  }

  public void setOrientation(java.lang.String orientation)
      throws com.poesys.db.InvalidParametersException {
    ((Transcript)dto).setOrientation(orientation);
  }

  // Source: AddLocalAttributeProperties
  public java.lang.String getBasis() {
    return ((Transcript)dto).getBasis();
  }

  public void setBasis(java.lang.String basis)
      throws com.poesys.db.InvalidParametersException {
    ((Transcript)dto).setBasis(basis);
  }

  // Source: AddLocalAttributeProperties
  public java.lang.Boolean getDerived() {
    return ((Transcript)dto).getDerived();
  }

  public void setDerived(java.lang.Boolean derived)
      throws com.poesys.db.InvalidParametersException {
    ((Transcript)dto).setDerived(derived);
  }

  // Source: AddLocalAttributeProperties
  public java.lang.Boolean getRepresentativeGeneModel() {
    return ((Transcript)dto).getRepresentativeGeneModel();
  }

  public void setRepresentativeGeneModel(java.lang.Boolean representativeGeneModel)
      throws com.poesys.db.InvalidParametersException {
    ((Transcript)dto).setRepresentativeGeneModel(representativeGeneModel);
  }

  // Source: AddToOneAssociationRequiredObjectProperties
  public org.tair.db.genomicregion.IGene getTranscribes() {
    return ((Transcript)dto).getTranscribes();
  }

  public void setTranscribes(org.tair.db.genomicregion.IGene transcribes)
      throws com.poesys.db.InvalidParametersException {
    ((Transcript)dto).setTranscribes(transcribes);
  }

  // Source: AddNaturalKeyProperties + AddInheritedKeyProperties + AddToOneAssociationAttributeProperties
  public java.lang.Long getTranscribesTairObjectId() {
    return ((Transcript)dto).getTranscribesTairObjectId();
  }

  // Source: AddToManyChildCollectionProperties
  public java.util.Collection<org.tair.db.genomicregion.IEst> getEsts() {
    return ((Transcript)dto).getEsts();
  }

  public void setEsts(java.util.Collection<org.tair.db.genomicregion.IEst> ests)
      {
    ((Transcript)dto).setEsts(ests);
  }

  // Source: AddToManyChildCollectionProperties
  public java.util.Collection<org.tair.db.genomicregion.IPolypeptide> getProteins() {
    return ((Transcript)dto).getProteins();
  }

  public void setProteins(java.util.Collection<org.tair.db.genomicregion.IPolypeptide> proteins)
      {
    ((Transcript)dto).setProteins(proteins);
  }

  // Source: AddToManyChildCollectionProperties
  public java.util.Collection<org.tair.db.genomicregion.IExperimentalCdna> getExperimentalCdnas() {
    return ((Transcript)dto).getExperimentalCdnas();
  }

  public void setExperimentalCdnas(java.util.Collection<org.tair.db.genomicregion.IExperimentalCdna> experimentalCdnas)
      {
    ((Transcript)dto).setExperimentalCdnas(experimentalCdnas);
  }

  public void markChildrenDeleted() throws com.poesys.db.dto.DtoStatusException {
  	((Transcript)dto).markChildrenDeleted();
  }
}