/**
 * Copyright 2012 Carnegie Institution for Science. All rights reserved.
 */
// Generated by AndroMDA Poesys/DB cartridge: DO NOT EDIT DIRECTLY.
// Template: AbstractDbDtoProxy.vsl

package org.tair.db.genomicregion;


import com.poesys.db.dto.AbstractLazyLoadingDtoProxy;


/**
 * <p>
 * A data-access layer data-transfer object (DTO) lazy-loading proxy for the 
 * Contig. This class is an abstract class that contains AndroMDA 
 * generated code; change nothing in this class. Instead, override any methods 
 * in the concrete subclass generated in the same package. AndroMDA will 
 * overwrite this class each time you run it but will never overwrite the concrete subclass.
 * </p>
 * <p>
 * SO_0000149: A contiguous sequence derived from sequence assembly. Has no gaps,
 * but may contain N's from unavailable bases.
 * </p>
 *
 * @author Poesys/DB Cartridge
 */
public abstract class AbstractContigProxy extends AbstractLazyLoadingDtoProxy implements IContig {
  /** Default serial version UID for the Serializable DTO */
  private static final long serialVersionUID = 1L;
  
  /**
   * Create a ContigProxy. The concrete subclass must call this constructor.
   *
   * @param dto the DTO to proxy
   */
  public AbstractContigProxy(Contig dto) {
    super(dto);

  }

  @Override
  public boolean equals(Object obj) {
    AbstractContigProxy otherProxy = (AbstractContigProxy)obj;
    return ((Contig)dto).equals(otherProxy.dto);
  }

  @Override
  public int hashCode() {
    return ((Contig)dto).hashCode();
  }
  // Inherited properties

  public java.lang.Long getTairObjectId() {
    return ((IContig)dto).getTairObjectId();
  }

  public org.tair.db.genomicregion.IRegion getParent() {
    return ((IContig)dto).getParent();
  }

  /**
   * Set the property parent.
   * 
   * @param parent the value for the property
   */
  public void setParent(org.tair.db.genomicregion.IRegion parent)
      {
    ((Contig)dto).setParent(parent);
  }

  public org.tair.db.genomicregion.IReferenceGenome getReferenceGenome() {
    return ((IContig)dto).getReferenceGenome();
  }

  /**
   * Set the property referenceGenome.
   * 
   * @param referenceGenome the value for the property
   * @throws com.poesys.db.InvalidParametersException when the property value is null
   */
  public void setReferenceGenome(org.tair.db.genomicregion.IReferenceGenome referenceGenome)
      throws com.poesys.db.InvalidParametersException {
    ((Contig)dto).setReferenceGenome(referenceGenome);
  }

  public java.lang.String getName() {
    return ((IContig)dto).getName();
  }

  /**
   * Set the property name.
   * 
   * @param name the value for the property
   * @throws com.poesys.db.InvalidParametersException when the property value is null
   */
  public void setName(java.lang.String name)
      throws com.poesys.db.InvalidParametersException {
    ((Contig)dto).setName(name);
  }

  public java.sql.Timestamp getDateEntered() {
    return ((IContig)dto).getDateEntered();
  }

  /**
   * Set the property dateEntered.
   * 
   * @param dateEntered the value for the property
   * @throws com.poesys.db.InvalidParametersException when the property value is null
   */
  public void setDateEntered(java.sql.Timestamp dateEntered)
      throws com.poesys.db.InvalidParametersException {
    ((Contig)dto).setDateEntered(dateEntered);
  }

  public java.lang.Long getParentRegionTairObjectId() {
    return ((IContig)dto).getParentRegionTairObjectId();
  }

  public java.lang.String getGenome() {
    return ((IContig)dto).getGenome();
  }

  // Local properties (attributes, associations, and association classes)

  // Source: AddLocalAttributeProperties
  public java.lang.String getSequence() {
    return ((Contig)dto).getSequence();
  }

  public void setSequence(java.lang.String sequence)
      {
    ((Contig)dto).setSequence(sequence);
  }

  public void markChildrenDeleted() throws com.poesys.db.dto.DtoStatusException {
  	((Contig)dto).markChildrenDeleted();
  }
}