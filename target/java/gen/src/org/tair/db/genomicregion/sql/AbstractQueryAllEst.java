/**
 * Copyright 2012 Carnegie Institution for Science. All rights reserved.
 */
// Generated by AndroMDA Poesys/DB cartridge: DO NOT EDIT DIRECTLY.
// Template: AbstractQueryAll.vsl

package org.tair.db.genomicregion.sql;


import java.sql.ResultSet;
import java.sql.SQLException;

import com.poesys.db.InvalidParametersException;
import com.poesys.db.dao.query.IQuerySql;
import com.poesys.db.pk.IPrimaryKey;

import org.tair.db.genomicregion.GenomicregionFactory;


/**
 * <p>
 * A query Command pattern object that implements a SQL query for all the 
 * Est objects in the database; use with caution
 * </p>
 * 
 * @author Poesys/DB Cartridge
 */
public abstract class AbstractQueryAllEst implements IQuerySql<org.tair.db.genomicregion.IEst> {
  /** SQL query statement for Est */
  private static final String SQL =
    "SELECT tairObjectId, seqTairObjectId, name, sequence, genbankAccession, length, startPosition, endPosition, cloneName, cloneId, dateEntered FROM Est";

  public org.tair.db.genomicregion.IEst getData(ResultSet rs) throws SQLException {
    IPrimaryKey key = 
      GenomicregionFactory.getEstPrimaryKey(rs, "");
      
    return GenomicregionFactory.getEstData(key, rs);
  }
  
  public IPrimaryKey getPrimaryKey(ResultSet rs) throws SQLException,
      InvalidParametersException {
    return GenomicregionFactory.getEstPrimaryKey(rs, "");
  }

  public String getSql() {
    return SQL;
  }
}