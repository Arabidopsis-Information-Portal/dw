/**
 * Copyright 2012 Carnegie Institution for Science. All rights reserved.
 */
// Generated by AndroMDA Poesys/DB cartridge: DO NOT EDIT DIRECTLY.
// Template: IDbDto.vsl

package org.tair.db.genomicregion;

import com.poesys.db.dto.IDbDto;

import com.poesys.db.dto.DtoStatusException;
import com.poesys.db.pk.IPrimaryKey;


/**
 * <p>
 * A data-access layer data-transfer-object interface for the Region. 
 * The data-transfer-object class and proxy class implement this interface, as
 * does the business-layer data-transfer-object class.
 * </p>
 * <p>
 * SO_0000001: A sequence_feature with an extent greater than zero. A nucleotide
 * region is composed of bases and a polypeptide region is composed of amino acids.
 * </p>
 * <p>
 * Stereotypes:
 * </p>
 * <ul>
 *     <li>NaturalKey</li>
 *     <li>Persistent</li>
 * </ul>
 * <p>
 * Class is read/write: true
 * </p>
 * 
 * @author Poesys/DB Cartridge
 */
public interface IRegion extends IDbDto {

  boolean equals(Object arg0);

  int hashCode();

  /**
   * <p>
   * Mark any children of this DTO as deleted.
   * </p>
   *
   * @throws DtoStatusException when the child cannot be set to DELETED status
   */
  void markChildrenDeleted() throws DtoStatusException;

  IPrimaryKey getPrimaryKey();
  

  /**
   * <p>
   * the unique identifier in the TAIR database for the region (locus, gene,
   * chromosome, contig)
   * </p>
   * <p>
   * Added by AddNaturalKeyProperties
   * Owning DTO: ${property.dto.name}
   * Owning package: ${property.dto.packageName}
   * Property prefix: tairObjectId
   * </p>
   * @return a java.lang.Long tairObjectId
   */
  public java.lang.Long getTairObjectId();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: true
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: false

  /**
   * <p>
   * the name of the genomic region, such as the chromosome name (1, M), the
   * locus/gene name (AT1G01010), the transcript name (AT1G01010.1), or the contig
   * name (MI421-MI421); may or may not be unique within a genome
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties
   * Owning DTO: ${property.dto.name}
   * Owning package: ${property.dto.packageName}
   * Property prefix: name
   * </p>
   * @return a java.lang.String name
   */
  public java.lang.String getName();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: true
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: true

  /**
   * <p>
   * Set the name.
   * </p>
   *
   * @param name the value to set into the name
   * @throws com.poesys.db.InvalidParametersException when the name 
   *       value is null
   * @throws com.poesys.db.dto.DtoStatusException when the status cannot be set to CHANGED
   */
  public void setName(java.lang.String name) throws com.poesys.db.dto.DtoStatusException, com.poesys.db.InvalidParametersException;


  /**
   * <p>
   * the date on which the region was created in the source database
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties
   * Owning DTO: ${property.dto.name}
   * Owning package: ${property.dto.packageName}
   * Property prefix: dateEntered
   * </p>
   * @return a java.sql.Timestamp dateEntered
   */
  public java.sql.Timestamp getDateEntered();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: true
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: true

  /**
   * <p>
   * Set the dateEntered.
   * </p>
   *
   * @param dateEntered the value to set into the dateEntered
   * @throws com.poesys.db.InvalidParametersException when the dateEntered 
   *       value is null
   * @throws com.poesys.db.dto.DtoStatusException when the status cannot be set to CHANGED
   */
  public void setDateEntered(java.sql.Timestamp dateEntered) throws com.poesys.db.dto.DtoStatusException, com.poesys.db.InvalidParametersException;


  /**
   * 
   * <p>
   * Added by AddToOneAssociationOptionalObjectProperties
   * Owning DTO: Region
   * Owning package: org.tair.db.genomicregion
   * Property prefix: parentRegion
   * </p>
   * @return a org.tair.db.genomicregion.IRegion parent
   */
  public org.tair.db.genomicregion.IRegion getParent();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: true
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: true

  /**
   * <p>
   * Set the parent.
   * </p>
   *
   * @param parent the value to set into the parent
   * @throws com.poesys.db.dto.DtoStatusException when the status cannot be set to CHANGED
   */
  public void setParent(org.tair.db.genomicregion.IRegion parent) throws com.poesys.db.dto.DtoStatusException;


  /**
   * 
   * <p>
   * Added by AddToOneAssociationRequiredObjectProperties
   * Owning DTO: ReferenceGenome
   * Owning package: org.tair.db.genomicregion
   * Property prefix: referenceGenome
   * </p>
   * @return a org.tair.db.genomicregion.IReferenceGenome referenceGenome
   */
  public org.tair.db.genomicregion.IReferenceGenome getReferenceGenome();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: true
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: true

  /**
   * <p>
   * Set the referenceGenome.
   * </p>
   *
   * @param referenceGenome the value to set into the referenceGenome
   * @throws com.poesys.db.InvalidParametersException when the referenceGenome 
   *       value is null
   * @throws com.poesys.db.dto.DtoStatusException when the status cannot be set to CHANGED
   */
  public void setReferenceGenome(org.tair.db.genomicregion.IReferenceGenome referenceGenome) throws com.poesys.db.dto.DtoStatusException, com.poesys.db.InvalidParametersException;


  /**
   * <p>
   * Foreign key used by setter to query associated object
   * </p>
   * <p>
   * Added by AddNaturalKeyProperties + AddToOneAssociationAttributeProperties
   * Owning DTO: Region
   * Owning package: org.tair.db.genomicregion
   * Property prefix: parentRegion
   * </p>
   * @return a java.lang.Long parentRegionTairObjectId
   */
  public java.lang.Long getParentRegionTairObjectId();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: true
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: false

  /**
   * <p>
   * Foreign key used by setter to query associated object
   * </p>
   * <p>
   * Added by AddNaturalKeyProperties + AddToOneAssociationAttributeProperties
   * Owning DTO: ReferenceGenome
   * Owning package: org.tair.db.genomicregion
   * Property prefix: referenceGenome
   * </p>
   * @return a java.lang.String genome
   */
  public java.lang.String getGenome();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: true
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: false
}