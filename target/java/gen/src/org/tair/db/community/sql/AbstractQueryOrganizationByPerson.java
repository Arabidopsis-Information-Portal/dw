/**
 * Copyright 2012 Carnegie Institution for Science. All rights reserved.
 */
// Generated by AndroMDA Poesys/DB cartridge: DO NOT EDIT DIRECTLY.
// Template: AbstractQueryAssociatedManyToManyObjects.vsl


package org.tair.db.community.sql;


import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import com.poesys.db.ConstraintViolationException;
import com.poesys.db.InvalidParametersException;
import com.poesys.db.dao.query.IParameterizedQuerySql;
import com.poesys.db.pk.IPrimaryKey;



/**
 * <p>
 * A query Command pattern object that implements a SQL query of a collection of 
 * Organization objects using the primary key of an associated 
 * Person object through the association Organization using the 
 * association class Affiliation. This association is a many-to-many 
 * association from Organization to Person.
 * </p>
 * <p>
 * This SQL specification contains a SQL statement that queries a collection of
 * Organization objects from the database table Organization by
 * joining to the database table Affiliation and using the 
 * primary key from Person to query the collection.
 * </p>
 * 
 * @author Poesys/DB Cartridge
 */
public abstract class AbstractQueryOrganizationByPerson 
    implements IParameterizedQuerySql<org.tair.db.community.IOrganization, org.tair.db.community.IPerson> {
  /** SQL query statement for Organization */
  private static final String SQL =
    "SELECT a.communityId, a.communityType, a.email, a.memberStatus, a.countryId, a.name, a.organizationType, a.description, a.commercial FROM Organization a JOIN Affiliation b ON a.communityId = b.organizationCommunityId WHERE b.affiliateCommunityId = ?";

  public void bindParameters(PreparedStatement stmt, org.tair.db.community.IPerson parameters)
      throws SQLException {
    // Set the parameters starting with the first parameter.
    parameters.getPrimaryKey().setParams(stmt, 1);
  }

  public String getParameterValues(org.tair.db.community.IPerson parameters) {
    // Create the output string with the key parameters.
    return parameters.getPrimaryKey().getValueList();
  }

  public org.tair.db.community.IOrganization getData(ResultSet rs) 
      throws SQLException, ConstraintViolationException {
    IPrimaryKey key = 
      org.tair.db.community.CommunityFactory.getOrganizationPrimaryKey(rs, "");
    return org.tair.db.community.CommunityFactory.getOrganizationData(key, rs);
  }

  public IPrimaryKey getPrimaryKey(ResultSet rs) throws SQLException,
      InvalidParametersException {
    return org.tair.db.community.CommunityFactory.getOrganizationPrimaryKey(rs, "");
  }

  public String getSql() {
    return SQL;
  }
}